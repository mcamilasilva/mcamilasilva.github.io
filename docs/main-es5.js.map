{"version":3,"sources":["webpack:///src/app/dictionaries/locale.dictionary.ts","webpack:///src/app/models/enums/month.enum.ts","webpack:///src/app/models/enums/work-experience.enum.ts","webpack:///src/app/components/ms-language-level/ms-language-level.component.ts","webpack:///src/app/components/ms-language-level/ms-language-level.component.html","webpack:///src/app/components/skills/ms-hard-skills/ms-hard-skills.component.ts","webpack:///src/app/components/skills/ms-hard-skills/ms-hard-skills.component.html","webpack:///src/app/components/certifications/ms-certifications/ms-certifications.component.ts","webpack:///src/app/components/certifications/ms-certifications/ms-certifications.component.html","webpack:///src/app/dictionaries/position.dictionary.ts","webpack:///src/app/models/month-year.ts","webpack:///src/app/components/about-me/ms-about-me/ms-about-me.component.ts","webpack:///src/app/components/about-me/ms-about-me/ms-about-me.component.html","webpack:///src/app/service/system-language.service.ts","webpack:///src/app/components/ms-back-to-top-button/ms-back-to-top-button.component.ts","webpack:///src/app/components/ms-back-to-top-button/ms-back-to-top-button.component.html","webpack:///src/app/components/about-me/ms-about-me-detail-item/ms-about-me-detail-item.component.ts","webpack:///src/app/components/about-me/ms-about-me-detail-item/ms-about-me-detail-item.component.html","webpack:///src/app/dictionaries/about-me-info.dictionary.ts","webpack:///src/app/models/resume.ts","webpack:///src/app/components/education/ms-education/ms-education.component.ts","webpack:///src/app/components/education/ms-education/ms-education.component.html","webpack:///src/app/dictionaries/work-experience-description.dictionary.ts","webpack:///src/environments/environment.ts","webpack:///src/app/dictionaries/hard-skills.dictionary.ts","webpack:///src/app/dictionaries/fixed-labels-and-tooltips.dictionary.ts","webpack:///src/app/models/enums/skill-level.enum.ts","webpack:///src/app/dictionaries/school.dictionary.ts","webpack:///src/app/models/enums/thesis-info.enum.ts","webpack:///src/app/models/enums/hard-skill.enum.ts","webpack:///src/app/components/ms-header-menu/ms-header-menu.component.ts","webpack:///src/app/components/ms-header-menu/ms-header-menu.component.html","webpack:///src/app/models/external-link.ts","webpack:///src/app/pipes/translate.pipe.ts","webpack:///src/app/dictionaries/linkedin-info.dictionary.ts","webpack:///src/app/pipes/period.pipe.ts","webpack:///src/app/dictionaries/language.dictionary.ts","webpack:///src/app/components/certifications/ms-certification-item/ms-certification-item.component.ts","webpack:///src/app/components/certifications/ms-certification-item/ms-certification-item.component.html","webpack:///src/app/dictionaries/major-degree.dictionary.ts","webpack:///src/app/components/ms-footer/ms-footer.component.ts","webpack:///src/app/components/ms-footer/ms-footer.component.html","webpack:///src/app/models/enums/linkedin-info.enum.ts","webpack:///src/app/models/enums/system-language.enum.ts","webpack:///src/app/models/enums/major.enum.ts","webpack:///src/app/models/enums/title.enum.ts","webpack:///src/app/models/about-me-detail-item.ts","webpack:///src/app/models/enums/work-experience-technology.enum.ts","webpack:///src/app/models/activity-item.ts","webpack:///src/app/models/enums/about-me-info.enum.ts","webpack:///src/app/models/enums/locale.enum.ts","webpack:///src/app/pipes/positions.pipe.ts","webpack:///src/app/models/enums/menu-item.enum.ts","webpack:///src/app/models/enums/activity-type.enum.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/models/hard-skill.ts","webpack:///src/app/models/enums/translation-type.enum.ts","webpack:///src/app/service/translation.service.ts","webpack:///src/app/dictionaries/company-website.dictionary.ts","webpack:///src/app/models/about-me.ts","webpack:///src/app/components/skills/ms-soft-skills/ms-soft-skills.component.ts","webpack:///src/app/components/skills/ms-soft-skills/ms-soft-skills.component.html","webpack:///src/app/models/enums/soft-skill.enum.ts","webpack:///src/app/components/work-experience/ms-work-experience-item/ms-work-experience-item.component.ts","webpack:///src/app/components/work-experience/ms-work-experience-item/ms-work-experience-item.component.html","webpack:///src/app/pipes/majors.pipe.ts","webpack:///src/app/components/ms-btn-period/ms-btn-period.component.ts","webpack:///src/app/components/ms-btn-period/ms-btn-period.component.html","webpack:///src/app/models/enums/resume-info.enum.ts","webpack:///src/app/components/ms-system-language-modal/ms-system-language-modal.component.ts","webpack:///src/app/components/ms-system-language-modal/ms-system-language-modal.component.html","webpack:///src/app/models/education-item.ts","webpack:///src/app/models/certification.ts","webpack:///src/app/app.module.ts","webpack:///src/app/models/enums/position.enum.ts","webpack:///src/app/models/period.ts","webpack:///src/app/dictionaries/soft-skill.dictionary.ts","webpack:///src/app/dictionaries/title.dictionary.ts","webpack:///src/app/models/language-level.ts","webpack:///src/app/dictionaries/school-website.dictionary.ts","webpack:///src/app/models/header-info.ts","webpack:///src/app/components/education/ms-education-item/ms-education-item.component.ts","webpack:///src/app/components/education/ms-education-item/ms-education-item.component.html","webpack:///src/app/components/skills/ms-hard-skills-item/ms-hard-skills-item.component.ts","webpack:///src/app/components/skills/ms-hard-skills-item/ms-hard-skills-item.component.html","webpack:///src/app/dictionaries/major.dictionary.ts","webpack:///src/app/dictionaries/system-language.dictionary.ts","webpack:///src/app/models/menu-item.ts","webpack:///src/app/models/enums/major-degree.enum.ts","webpack:///src/app/components/ms-header-body/ms-header-body.component.ts","webpack:///src/app/components/ms-header-body/ms-header-body.component.html","webpack:///src/app/dictionaries/menu-item.dictionary.ts","webpack:///src/app/dictionaries/work-experience-activities.dictionary.ts","webpack:///src/app/models/work-experience.ts","webpack:///src/app/models/skills.ts","webpack:///src/app/components/skills/ms-skills/ms-skills.component.ts","webpack:///src/app/components/skills/ms-skills/ms-skills.component.html","webpack:///src/app/components/work-experience/ms-work-experience/ms-work-experience.component.ts","webpack:///src/app/components/work-experience/ms-work-experience/ms-work-experience.component.html","webpack:///src/app/dictionaries/thesis-info.dictionary.ts","webpack:///src/app/models/enums/company.enum.ts","webpack:///src/app/models/enums/school.enum.ts","webpack:///src/app/pipes/date.pipe.ts","webpack:///src/app/models/enums/language.enum.ts","webpack:///src/app/models/education-additional-info.ts","webpack:///src/app/dictionaries/resume-info.dictionary.ts","webpack:///src/app/service/resume.service.ts","webpack:///src/main.ts","webpack:///src/app/components/ms-btn-linkedin/ms-btn-linkedin.component.ts","webpack:///src/app/components/ms-btn-linkedin/ms-btn-linkedin.component.html","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/models/enums/fixed-labels-and-tooltips.enum.ts"],"names":["english","SOROCABA","ROME","SAO_PAULO","portuguese","LocaleDictionary","EN_US","PT_BR","MonthEnum","WorkExperienceEnum","MsLanguageLevelComponent","info","systemLanguage","progressClass","level","selector","templateUrl","styleUrls","MsHardSkillsComponent","skills","language","skillGroups","Array","MsCertificationsComponent","items","title","CERTIFICATIONS","TECH_LEAD","SENIOR_SOFTWARE_DEVELOPER","INTERMEDIATE_SOFTWARE_DEVELOPER","WEB_DEVELOPER","SYSTEM_ANALYST","SOFTWARE_ENGINEER","PositionDictionary","MonthYear","month","year","_month","_year","MsAboutMeComponent","ABOUT_ME","detailsSectionTitle","DETAILS","languagesSectionTitle","LANGUAGES","bioParagraphs","BIO","SystemLanguageService","storage","LANGUAGE_KEY","languageSubject$","set","next","currentLanguage","get","Object","keys","includes","providedIn","MsBackToTopButtonComponent","document","translationService","showButton","window","pageYOffset","documentElement","scrollTop","body","smoothscroll","currentScroll","requestAnimationFrame","scrollTo","translate","FIXED_LABELS_AND_TOOLTIPS","BACK_TO_TOP_BTN_TOOLTIP","scrollToTop","Document","onWindowScroll","MsAboutMeDetailItemComponent","calculateAge","birthdate","Date","setDate","setMonth","setFullYear","timeDiff","Math","abs","now","getTime","floor","commons","AGE","String","EMAIL","PHONE","LOCATION","AboutMeInfoDictionary","assign","Resume","aboutMe","workExperiences","education","certifications","_aboutMe","_workExperiences","_education","_certifications","_skills","MsEducationComponent","EDUCATION","index","UBER_SOFTWARE_ENGINEER","OPUS_SENIOR_TECH_LEAD","OPUS_INTERMEDIATE_DEVELOPER","AUDAXWARE","OPUS_JR_SYSTEM_ANALYST","WorkExperienceDescriptionDictionary","environment","production","ANGULAR","AWS","C_SHARP","DATA_WAREHOUSE","DESIGN_PATTERNS","DDD","ENTITY_FRAMEWORK","FRONT_TECHNOLOGIES","GIT","HIBERNATE","JAVA","JAVASCRIPT_TYPESCRIPT","JENKINS","JIRA_CONFLUENCE","JSON","JUNIT","KENDO_UI","MAVEN","MONGO_DB","MY_SQL","NEO4J","OLAP","POSTGRESQL","POSTMAN","REST","SCRUM_KANBAN","SOAPUI","SPRING_BOOT","SQL_SERVER","SWAGGER","TDD","TFS","XML","SONAR_QUBE","CI_CD","KIBANA","GRAFANA","M3","CASSANDRA","PHABRICATOR_ARCANIST","OAUTH20","JWT","GOLANG","API_DESIGN","OOP","PROGRAMMING_LOGIC","HardSkillsDictionary","CURRENT_LABEL","FixedLabelsAndTooltipsDictionary","SkillLevelEnum","UFSCAR","SAPIENZA","SchoolDictionary","ThesisInfoEnum","HardSkillEnum","MsHeaderMenuComponent","scrollToService","target","config","ExternalLink","uri","label","_uri","_label","TranslatePipe","languageService","value","undefined","type","majors","length","i","filterAndJoin","positions","filter","item","join","name","LINK","TOOLTIP","LinkedinInfoDictionary","PeriodPipe","datePipe","format","end","transform","start","PORTUGUESE","ENGLISH","ITALIAN","SPANISH","FRENCH","LanguageDictionary","MsCertificationItemComponent","systemLanguageService","MASTER","BACHELOR","ACADEMIC_EXCHANGE","MajorDegreeDictionary","MsFooterComponent","currentYear","getFullYear","LinkedinInfoEnum","SystemLanguageEnum","MajorEnum","TitleEnum","AboutMeDetailItem","_title","_info","WorkExperienceTechnologyEnum","ActivityItem","description","_type","_description","CODING","DATABASE","SUPPORT","ARCHITECTURE","AboutMeInfoEnum","LocaleEnum","PositionsPipe","map","position","POSITION","MenuItemEnum","ActivityTypeEnum","AppComponent","resumeService","menuItems","WORK_EXPERIENCE","SKILLS","CERTIFICATION","headerInfo","resume","languageObservable","subscribe","unsubscribe","HardSkill","skill","_skill","_level","TranslationTypeEnum","TranslationService","translatedValue","MAJOR_DEGREE","MAJOR","LOCALE","SCHOOL","LANGUAGE","TITLE","MENU_ITEM","SOFT_SKILL","HARD_SKILL","SYSTEM_LANGUAGE","ABOUT_ME_INFO","WORK_EXPERIENCE_DESCRIPTION","WORK_EXPERIENCE_ACTIVITY","THESIS_INFO","LINKEDIN_INFO","RESUME_INFO","COMPANY_WEBSITE","SCHOOL_WEBSITE","OPUS","UBER","CompanyWebsiteDictionary","AboutMe","details","languages","_bioParagraphs","_details","_languages","MsSoftSkillsComponent","skillPairs","splitIntoPairs","pairs","pairIdx","SoftSkillEnum","MsWorkExperienceItemComponent","TECHNOLOGIES_THRESHOLD","technologies","slice","identifier","company","MajorsPipe","major","MsBtnPeriodComponent","period","ResumeInfoEnum","MsSystemLanguageModalComponent","id","options","closeModalBtn","nativeElement","click","EducationItem","school","degree","locale","externalLink","additionalInfo","_school","_degree","_major","_period","_locale","_externalLink","_additionalInfo","Certification","provider","date","_name","_provider","_date","AppModule","forRoot","declarations","imports","providers","bootstrap","PositionEnum","Period","_start","_end","ADAPTABILITY","ATTENTION_TO_DETAIL","COLLABORATION","COMMITMENT","COMMUNICATION","CRITICAL_THINKING","LEADERSHIP","PROBLEM_SOLVING","RESILIENCE","SELF_LEARNING","TEAM_WORK","TIME_MANAGEMENT","SoftSkillsDictionary","TitleDictionary","LanguageLevel","_language","websites","SchoolWebsiteDictionary","HeaderInfo","photoUrl","_positions","_photoUrl","MsEducationItemComponent","MsHardSkillsItemComponent","levelClasses","MAX","populateLevelClasses","FULL_STAR_CLASS","EMPTY_STAR_CLASS","HALF_STAR_CLASS","BUSINESS_INTELLIGENCE","COMPUTER_SCIENCE","MajorDictionary","SystemLanguageDictionary","MenuItem","_target","MajorDegreeEnum","MsHeaderBodyComponent","resumeDownloadInfo","FILE_NAME_SUFFIX","resumeURI","URI","MenuItemDictionary","WorkExperienceActivitiesDictionary","WorkExperience","_identifier","_company","_technologies","Skills","hardSkills","softSkills","_hardSkills","_softSkills","MsSkillsComponent","MsWorkExperienceComponent","experiences","LINK_LABEL","TITLE_LABEL","THESIS_TITLE","ThesisInfoDictionary","CompanyEnum","SchoolEnum","DatePipe","formatter","Intl","DateTimeFormat","replace","LanguageEnum","EducationAdditionalInfo","ResumeInfoDictionary","ResumeService","JUL","GO","KANBAN","PHABRICATOR","CPLUS2","LUA","ARCANIST","SCRUM","CICD","NOV","JAVA_11","ANGULAR_6","JIRA","JAVA_8","ANGULAR_2","APR","ANGULAR_JS","MATERIAL","AZURE","WEB_JOB","JAN","KNOCKOUT","BOOTSTRAP","AUG","FEB","OCT","FOUR_AND_HALF","FOUR","THREE_AND_HALF","THREE","TWO_AND_HALF","bootstrapModule","err","console","error","MsBtnLinkedinComponent","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","module","exports","FixedLabelsAndTooltipsEnum"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { SystemLanguageEnum } from '../models/enums/system-language.enum';\r\nimport { LocaleEnum } from '../models/enums/locale.enum';\r\n\r\nconst english = <{ [id: string]: string }> {\r\n    [LocaleEnum.SOROCABA]: 'Sorocaba, SP, Brazil',\r\n    [LocaleEnum.ROME]: 'Rome, Italy',\r\n    [LocaleEnum.SAO_PAULO]: 'São Paulo, SP, Brazil'\r\n};\r\n\r\nconst portuguese = <{ [id: string]: string }> {\r\n    [LocaleEnum.SOROCABA]: 'Sorocaba, SP, Brasil',\r\n    [LocaleEnum.ROME]: 'Roma, Itália',\r\n    [LocaleEnum.SAO_PAULO]: 'São Paulo, SP, Brasil'\r\n};\r\n\r\nexport const LocaleDictionary = <{ [id: string]: { [id: string]: string } }>{\r\n    [SystemLanguageEnum.EN_US]: english,\r\n    [SystemLanguageEnum.PT_BR]: portuguese\r\n};\r\n\r\n","export enum MonthEnum {\r\n\r\n    JAN,\r\n    FEB,\r\n    MAR,\r\n    APR,\r\n    MAY,\r\n    JUN,\r\n    JUL,\r\n    AUG,\r\n    SEP,\r\n    OCT,\r\n    NOV,\r\n    DEC\r\n}\r\n","export enum WorkExperienceEnum {\r\n\r\n    OPUS_SENIOR_TECH_LEAD,\r\n    OPUS_INTERMEDIATE_DEVELOPER,\r\n    AUDAXWARE,\r\n    OPUS_JR_SYSTEM_ANALYST,\r\n    UBER_SOFTWARE_ENGINEER\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { SystemLanguageEnum } from 'src/app/models/enums/system-language.enum';\r\nimport { LanguageLevel } from 'src/app/models/language-level';\r\n\r\n@Component({\r\n  selector: 'ms-language-level',\r\n  templateUrl: './ms-language-level.component.html',\r\n  styleUrls: ['./ms-language-level.component.css']\r\n})\r\nexport class MsLanguageLevelComponent implements OnInit {\r\n\r\n  @Input() info: LanguageLevel = new LanguageLevel();\r\n  @Input('system-language') systemLanguage: SystemLanguageEnum = SystemLanguageEnum.EN_US;\r\n\r\n  public progressClass: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.progressClass = { [`progress-${this.info.level}`]: true };\r\n  }\r\n}\r\n","<div class=\"circular-progress\" [ngClass]=\"progressClass\">\r\n    <span class=\"progress-left\">\r\n        <span class=\"progress-bar\"></span>\r\n    </span>\r\n    <span class=\"progress-right\">\r\n        <span class=\"progress-bar\"></span>\r\n    </span>\r\n    <div class=\"progress-value\">{{ info.level }}%</div>\r\n</div>\r\n<p class=\"text-center\">{{ info.language | translate: 'LANGUAGE':systemLanguage }}</p>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { SystemLanguageEnum } from 'src/app/models/enums/system-language.enum';\r\nimport { HardSkill } from 'src/app/models/hard-skill';\r\n\r\n@Component({\r\n  selector: 'ms-hard-skills',\r\n  templateUrl: './ms-hard-skills.component.html',\r\n  styleUrls: ['./ms-hard-skills.component.css']\r\n})\r\nexport class MsHardSkillsComponent implements OnInit {\r\n\r\n  @Input() skills: HardSkill[] = [];\r\n  @Input() language: SystemLanguageEnum = SystemLanguageEnum.EN_US;\r\n\r\n  public skillGroups: HardSkill[][] = new Array<Array<HardSkill>>(2);\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void { }\r\n}\r\n","<div class=\"row\">\r\n    <ms-hard-skills-item *ngFor=\"let skill of skills\" [skill]=\"skill\" [language]=\"language\" class=\"col-md-6\"></ms-hard-skills-item>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Certification } from 'src/app/models/certification';\r\nimport { SystemLanguageEnum } from 'src/app/models/enums/system-language.enum';\r\nimport { TitleEnum } from 'src/app/models/enums/title.enum';\r\n\r\n@Component({\r\n  selector: 'ms-certifications',\r\n  templateUrl: './ms-certifications.component.html',\r\n  styleUrls: ['./ms-certifications.component.css']\r\n})\r\nexport class MsCertificationsComponent implements OnInit {\r\n\r\n  @Input() items: Certification[] = [];\r\n  @Input() language: SystemLanguageEnum = SystemLanguageEnum.EN_US;\r\n\r\n  public title: TitleEnum = TitleEnum.CERTIFICATIONS;\r\n  \r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"h4 text-center mb-4 title\">{{ title | translate: 'TITLE':language }}</div>\r\n<ms-certification-item *ngFor=\"let item of items\" [info]=\"item\"></ms-certification-item>","import { PositionEnum } from '../models/enums/position.enum';\r\nimport { SystemLanguageEnum } from '../models/enums/system-language.enum';\r\n\r\nconst english = <{ [id: string]: string }> {\r\n    [PositionEnum.TECH_LEAD]: 'Tech Lead',\r\n    [PositionEnum.SENIOR_SOFTWARE_DEVELOPER]: 'Senior Software Developer',\r\n    [PositionEnum.INTERMEDIATE_SOFTWARE_DEVELOPER]: 'Software Developer',\r\n    [PositionEnum.WEB_DEVELOPER]: 'Web Developer',\r\n    [PositionEnum.SYSTEM_ANALYST]: 'Jr. System Analyst',\r\n    [PositionEnum.SOFTWARE_ENGINEER]: \"Software Engineer\"\r\n};\r\n\r\nconst portuguese = <{ [id: string]: string }> {\r\n    [PositionEnum.TECH_LEAD]: 'Tech Lead',\r\n    [PositionEnum.SENIOR_SOFTWARE_DEVELOPER]: 'Desenvolvedora de Software Sênior',\r\n    [PositionEnum.INTERMEDIATE_SOFTWARE_DEVELOPER]: 'Desenvolvedora de Software Pleno',\r\n    [PositionEnum.WEB_DEVELOPER]: 'Desenvolvedora Web',\r\n    [PositionEnum.SYSTEM_ANALYST]: 'Analista de Sistemas Jr.',\r\n    [PositionEnum.SOFTWARE_ENGINEER]: \"Engenheira de Software\"\r\n};\r\n\r\nexport const PositionDictionary = <{ [id: string]: { [id: string]: string } }>{\r\n    [SystemLanguageEnum.EN_US]: english,\r\n    [SystemLanguageEnum.PT_BR]: portuguese\r\n};\r\n\r\n","import { MonthEnum } from './enums/month.enum';\r\n\r\nexport class MonthYear {\r\n\r\n    private _month: MonthEnum;\r\n    private _year: number;\r\n\r\n    constructor(month?: MonthEnum, year?: number)\r\n    constructor(month: MonthEnum, year: number) {\r\n        this._month = month;\r\n        this._year = year;\r\n    }\r\n\r\n    get month(): MonthEnum {\r\n        return this._month;\r\n    }\r\n\r\n    set month(month: MonthEnum) {\r\n        this._month = month;\r\n    }\r\n\r\n    get year(): number {\r\n        return this._year;\r\n    }\r\n\r\n    set year(year: number) {\r\n        this._year = year;\r\n    }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { AboutMeInfoDictionary } from 'src/app/dictionaries/about-me-info.dictionary';\r\nimport { AboutMe } from 'src/app/models/about-me';\r\nimport { AboutMeInfoEnum } from 'src/app/models/enums/about-me-info.enum';\r\nimport { SystemLanguageEnum } from 'src/app/models/enums/system-language.enum';\r\nimport { TitleEnum } from 'src/app/models/enums/title.enum';\r\n\r\n\r\n@Component({\r\n  selector: 'ms-about-me',\r\n  templateUrl: './ms-about-me.component.html',\r\n  styleUrls: ['./ms-about-me.component.css']\r\n})\r\nexport class MsAboutMeComponent implements OnInit {\r\n\r\n  @Input() info: AboutMe = new AboutMe();\r\n  @Input() language: SystemLanguageEnum = SystemLanguageEnum.EN_US;\r\n\r\n  public title: TitleEnum = TitleEnum.ABOUT_ME;\r\n  public detailsSectionTitle: TitleEnum = TitleEnum.DETAILS;\r\n  public languagesSectionTitle: TitleEnum = TitleEnum.LANGUAGES;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  get bioParagraphs(): string[] {\r\n    return this.info.bioParagraphs || AboutMeInfoDictionary[this.language][AboutMeInfoEnum.BIO]\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"card\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-6 col-md-12\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"h5 mt-0 title\">{{ title | translate: 'TITLE':language }}</div>\r\n                    <div class=\"text-justify\">\r\n                        <p *ngFor=\"let paragraph of bioParagraphs\">{{ paragraph }}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-lg-6 col-md-12\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"h5 mt-0 title\">{{ detailsSectionTitle | translate: 'TITLE':language }}</div>\r\n                    <ms-about-me-detail-item *ngFor=\"let item of info.details\" [info]=\"item\" [language]=\"language\">\r\n                        </ms-about-me-detail-item>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <div class=\"h5 mt-0 title\">{{ languagesSectionTitle | translate: 'TITLE':language }}</div>\r\n                    <div class=\"row languages\">\r\n                        <div class=\"col-4\" *ngFor=\"let languageLevel of info.languages\">\r\n                            <ms-language-level [info]=\"languageLevel\" [system-language]=\"language\"></ms-language-level>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Inject, Injectable } from '@angular/core';\r\nimport { LOCAL_STORAGE, StorageService } from 'ngx-webstorage-service';\r\nimport { Subject } from 'rxjs';\r\nimport { SystemLanguageEnum } from '../models/enums/system-language.enum';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SystemLanguageService {\r\n\r\n  private LANGUAGE_KEY: string = \"language\";\r\n\r\n  private languageSubject$: Subject<SystemLanguageEnum> = new Subject<SystemLanguageEnum>();\r\n\r\n  constructor(@Inject(LOCAL_STORAGE) private storage: StorageService) { }\r\n\r\n  set language(language: SystemLanguageEnum) {\r\n    this.storage.set(this.LANGUAGE_KEY, language);\r\n    this.languageSubject$.next(language);\r\n  }\r\n\r\n  get language(): SystemLanguageEnum {\r\n    let currentLanguage = this.storage.get(this.LANGUAGE_KEY);\r\n\r\n    if (!Object.keys(SystemLanguageEnum).includes(currentLanguage)) {\r\n      currentLanguage = SystemLanguageEnum.EN_US;\r\n      this.language = currentLanguage;\r\n    }\r\n\r\n    return currentLanguage;\r\n  }\r\n\r\n  get languageObservable(): Subject<SystemLanguageEnum> {\r\n    return this.languageSubject$;\r\n  }\r\n\r\n  get format(): string {\r\n    switch (this.language) {\r\n      case SystemLanguageEnum.EN_US:\r\n        return 'en-US';\r\n      case SystemLanguageEnum.PT_BR:\r\n        return 'pt-BR';\r\n    }\r\n  }\r\n\r\n}\r\n","import { DOCUMENT } from '@angular/common';\r\nimport { Component, HostListener, Inject, Input, OnInit } from '@angular/core';\r\nimport { FixedLabelsAndTooltipsEnum } from 'src/app/models/enums/fixed-labels-and-tooltips.enum';\r\nimport { SystemLanguageEnum } from 'src/app/models/enums/system-language.enum';\r\nimport { TranslationTypeEnum } from 'src/app/models/enums/translation-type.enum';\r\nimport { TranslationService } from 'src/app/service/translation.service';\r\n\r\n@Component({\r\n    selector: 'ms-back-to-top-button',\r\n    templateUrl: './ms-back-to-top-button.component.html',\r\n    styleUrls: ['./ms-back-to-top-button.component.css']\r\n})\r\nexport class MsBackToTopButtonComponent implements OnInit {\r\n\r\n    @Input() language: SystemLanguageEnum = SystemLanguageEnum.EN_US;\r\n\r\n    public showButton: boolean = false;\r\n\r\n    constructor(@Inject(DOCUMENT) private document: Document,\r\n        private translationService: TranslationService) { }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    get tooltip(): string {\r\n        return this.translationService.translate(this.language, TranslationTypeEnum.FIXED_LABELS_AND_TOOLTIPS, FixedLabelsAndTooltipsEnum.BACK_TO_TOP_BTN_TOOLTIP)\r\n    }\r\n\r\n    /**\r\n     * Credits about the logic to https://www.techtrek.io/Adding-a-Scroll-to-Top-button-in-Angular\r\n     */\r\n    @HostListener(\"window:scroll\", [])\r\n    public onWindowScroll() {\r\n        if (window.pageYOffset || this.document.documentElement.scrollTop || this.document.body.scrollTop > 100) {\r\n            this.showButton = true;\r\n        }\r\n        else if (this.showButton && window.pageYOffset || this.document.documentElement.scrollTop || this.document.body.scrollTop < 10) {\r\n            this.showButton = false;\r\n        }\r\n    }\r\n    public scrollToTop() {\r\n        (function smoothscroll() {\r\n            var currentScroll = document.documentElement.scrollTop || document.body.scrollTop;\r\n            if (currentScroll > 0) {\r\n                window.requestAnimationFrame(smoothscroll);\r\n                window.scrollTo(0, currentScroll - (currentScroll / 8));\r\n            }\r\n        })();\r\n    }\r\n\r\n}\r\n","<div class=\"btn-fab\" id=\"back-to-top\" [hidden]=\"!showButton\">\r\n    <button type=\"button\" class=\"btn btn-info btn-icon btn-round\" placement=\"left\"\r\n      [ngbTooltip]=\"tooltip\" (click)=\"scrollToTop()\">\r\n      <i class=\"fa fa-arrow-up\"></i>\r\n    </button>\r\n  </div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { AboutMeDetailItem } from 'src/app/models/about-me-detail-item';\r\nimport { SystemLanguageEnum } from 'src/app/models/enums/system-language.enum';\r\n\r\n@Component({\r\n  selector: 'ms-about-me-detail-item',\r\n  templateUrl: './ms-about-me-detail-item.component.html',\r\n  styleUrls: ['./ms-about-me-detail-item.component.css']\r\n})\r\nexport class MsAboutMeDetailItemComponent implements OnInit {\r\n\r\n  @Input() info: AboutMeDetailItem = new AboutMeDetailItem();\r\n  @Input() language: SystemLanguageEnum = SystemLanguageEnum.EN_US;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<div class=\"row mt-3\">\r\n    <div class=\"col-lg-3\"><strong class=\"text-capitalize\">{{ info.title | translate: 'TITLE':language }}:</strong></div>\r\n    <div class=\"col-lg-9\">{{ info.info | translate: 'ABOUT_ME_INFO':language }}</div>\r\n</div>","import { SystemLanguageEnum } from '../models/enums/system-language.enum';\r\nimport { LinkedinInfoEnum } from '../models/enums/linkedin-info.enum';\r\nimport { AboutMeInfoEnum } from '../models/enums/about-me-info.enum';\r\nimport { LocaleDictionary } from './locale.dictionary';\r\nimport { LocaleEnum } from '../models/enums/locale.enum';\r\n\r\n/**\r\n * Calculates the age based on the birthdate and the current date\r\n * \r\n */\r\nfunction calculateAge() {\r\n    let birthdate: Date = new Date();\r\n    birthdate.setDate(7);\r\n    birthdate.setMonth(8); //September\r\n    birthdate.setFullYear(1992);\r\n    let timeDiff = Math.abs(Date.now() - birthdate.getTime());\r\n    return Math.floor((timeDiff / (1000 * 3600 * 24)) / 365.25);\r\n}\r\n\r\nconst commons = <{ [id: string]: string }>{\r\n    [AboutMeInfoEnum.AGE]: String(calculateAge()),\r\n    [AboutMeInfoEnum.EMAIL]: 'manoelacamila.silva@gmail.com',\r\n};\r\n\r\nconst english = <{ [id: string]: any }>{\r\n    [AboutMeInfoEnum.PHONE]: '+55 11 94989-8386',\r\n    [AboutMeInfoEnum.LOCATION]: LocaleDictionary[SystemLanguageEnum.EN_US][LocaleEnum.SAO_PAULO],\r\n    [AboutMeInfoEnum.BIO]: [\r\n        `I am a Software Engineer/Developer who is passionate about technology. Seeing an idea getting off the ground and becoming something that improves people's lives brings me real joy.`,\r\n        `Although I have a proper knowledge of front-end techniques, my inclination is towards back-end. I am also really fond of good development techniques, such as clean code, design patterns, and so on, and I try to apply them as much as possible.`,\r\n        `Additionally, I have a strong can-do, hands-on attitude, and I am a true believer of teamwork. I am from the opinion that \"two heads are better than one\" and knowledge can always be improved. I just love learning new things and acquiring new skills.`\r\n    ]\r\n};\r\n\r\nconst portuguese = <{ [id: string]: any }>{\r\n    [AboutMeInfoEnum.PHONE]: '(11) 94989-8386',\r\n    [AboutMeInfoEnum.LOCATION]: LocaleDictionary[SystemLanguageEnum.PT_BR][LocaleEnum.SAO_PAULO],\r\n    [AboutMeInfoEnum.BIO]: [\r\n        'Engenheira/Desenvolvedora de Software apaixonada por tecnologia. Ver uma ideia sair do papel e virar algo que melhora a vida das pessoas, direta ou indiretamente, me traz imensa satisfação.',\r\n        'Embora eu possua um conhecimento apropriado de front-end, minha paixão encontra-se no back-end. Também sou adepta de técnicas de boas práticas de desenvolvimento, tais como código limpo, design patterns e similares, e me empenho em aplicá-las sempre que possível.',\r\n        `Além disso, eu tenho uma atitude prática e positiva, além de ser uma verdadeira entusiasta de traballho em equipe. Eu sou da opnião de que \"duas cabeças pensam melhor do que uma\" e conhecimento pode sempre ser aprimorado. Basicamente, eu amo aprender assuntos novos e adquirir novas habilidades.`\r\n    ]\r\n};\r\n\r\nexport const AboutMeInfoDictionary = <{ [id: string]: { [id: string]: any } }>{\r\n    [SystemLanguageEnum.EN_US]: Object.assign({}, commons, english),\r\n    [SystemLanguageEnum.PT_BR]: Object.assign({}, commons, portuguese),\r\n};\r\n\r\n","import { AboutMe } from \"./about-me\";\r\nimport { Certification } from \"./certification\";\r\nimport { EducationItem } from \"./education-item\";\r\nimport { Skills } from \"./skills\";\r\nimport { WorkExperience } from \"./work-experience\";\r\n\r\nexport class Resume {\r\n\r\n\r\n    private _aboutMe: AboutMe;\r\n    private _workExperiences: WorkExperience[];\r\n    private _education: EducationItem[];\r\n    private _certifications: Certification[];\r\n    private _skills: Skills;\r\n\r\n    constructor(aboutMe?: AboutMe, workExperiences?: WorkExperience[], education?: EducationItem[], certifications?: Certification[], skills?: Skills)\r\n    constructor(aboutMe: AboutMe, workExperiences: WorkExperience[], education: EducationItem[], certifications: Certification[], skills: Skills)\r\n    {\r\n        this._aboutMe = aboutMe;\r\n        this._workExperiences = workExperiences;\r\n        this._education = education;\r\n        this._certifications = certifications;\r\n        this._skills = skills;\r\n    }\r\n\r\n    get aboutMe(): AboutMe {\r\n        return this._aboutMe;\r\n    }\r\n\r\n    set aboutMe(aboutMe: AboutMe) {\r\n        this._aboutMe = aboutMe;\r\n    }\r\n\r\n    get workExperiences(): WorkExperience[] {\r\n        return this._workExperiences;\r\n    }\r\n\r\n    set workExperiences(workExperiences: WorkExperience[]) {\r\n        this._workExperiences = workExperiences;\r\n    }\r\n\r\n    get education(): EducationItem[] {\r\n        return this._education;\r\n    }\r\n\r\n    set education(education: EducationItem[]) {\r\n        this._education = education;\r\n    }\r\n\r\n    get certifications(): Certification[] {\r\n        return this._certifications;\r\n    }\r\n\r\n    set certifications(certifications: Certification[]) {\r\n        this._certifications = certifications;\r\n    }\r\n\r\n    get skills(): Skills {\r\n        return this._skills;\r\n    }\r\n\r\n    set skills(skills: Skills) {\r\n        this._skills = skills;\r\n    }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { EducationItem } from 'src/app/models/education-item';\r\nimport { SystemLanguageEnum } from 'src/app/models/enums/system-language.enum';\r\nimport { TitleEnum } from 'src/app/models/enums/title.enum';\r\nimport { SystemLanguageService } from 'src/app/service/system-language.service';\r\n\r\n@Component({\r\n  selector: 'ms-education',\r\n  templateUrl: './ms-education.component.html',\r\n  styleUrls: ['./ms-education.component.css']\r\n})\r\nexport class MsEducationComponent implements OnInit {\r\n\r\n  @Input() items: EducationItem[] = []\r\n  @Input() language: SystemLanguageEnum = SystemLanguageEnum.EN_US;\r\n\r\n  public title: TitleEnum = TitleEnum.EDUCATION;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  /**\r\n   * Indicates if should be an inverted card or not\r\n   * \r\n   * @param index \r\n   */\r\n  public isInvertedCard(index: number): boolean {\r\n    return (index % 2) > 0;\r\n  }\r\n\r\n}\r\n","<div class=\"h4 text-center mb-4 title\">{{ title | translate: 'TITLE':language }}</div>\r\n<ul class=\"timeline\">\r\n    <li *ngFor=\"let item of items; index as i\" [class.timeline-inverted]=\"isInvertedCard(i)\">\r\n        <div class=\"timeline-badge\"><a><i class=\"fa fa-graduation-cap\"></i></a></div>\r\n        <div class=\"timeline-card\">\r\n            <ms-education-item [info]=\"item\" [language]=\"language\"></ms-education-item>\r\n        </div>\r\n    </li>\r\n\r\n    <li class=\"clearfix\" style=\"float: none;\"></li>\r\n</ul>","import { SystemLanguageEnum } from '../models/enums/system-language.enum';\r\nimport { WorkExperienceEnum } from '../models/enums/work-experience.enum';\r\n\r\n\r\nconst portuguese = <{ [id: string]: string }>{\r\n    [WorkExperienceEnum.UBER_SOFTWARE_ENGINEER]: `Uber é uma Big Tech com foco em mobilidade urbana, cujo os serviços incluem: \r\n        transporte privado, entrega de comida/pacotes, transporte de carga, entre outros. O time de \"Session Management\",  do qual eu faço parte, é responsável por \r\n        cuidar de toda a parte de autenticação dos usuários assim como gerenciamento de sessões. Como Engenheira Backend no time minhas atividades incluem:`,\r\n    [WorkExperienceEnum.OPUS_SENIOR_TECH_LEAD]: `A OPUS Software é uma consultoria localizada em São Paulo - SP. Como Tech Lead e Desenvolvedor Sênior, minhas \r\n        responsabilidades consistiam principalmente do design de soluções, codificação, realização de code review and assistência aos meus colegas no intuito de \r\n        atingir as melhores soluções utilizando-se das melhores práticas. Alguma dos projetos que eu estive envolvida foram:`,\r\n    [WorkExperienceEnum.OPUS_INTERMEDIATE_DEVELOPER]: `Devido ao fato de que a OPUS é uma empresa de consultoria, eu tive a oportunidade de trabalhar em diversos \r\n        projetos e com uma ampla variedade de tecnologias. Os principais projetos que eu trabalhei durante meu tempo como desenvolvedor pleno foram:`,\r\n    [WorkExperienceEnum.AUDAXWARE]: `A Audaxware é uma startup localizada em Austin, Texas cujo produto é um sistema de planejamento de projeto. Em 2015, quando eu \r\n        fui contratada, eles possuíam um sistema legado que estava desenvolvido em ASP.Net com PostgreSQL e eles queriam construir um novo em C#, AngularJS e SQL \r\n        Server. Minhas principais contribuições foram:`,\r\n    [WorkExperienceEnum.OPUS_JR_SYSTEM_ANALYST]: `Esse foi o meu primeiro trabalho relacionado à tecnologia. Eu havia estava terminado minha graduação e me foi \r\n        fornecido um excelente ambiente para aprender e crescer como profissional. Os principais projetos que eu participei durante esse tempo foram:`\r\n};\r\n\r\nconst english = <{ [id: string]: string }>{\r\n    [WorkExperienceEnum.UBER_SOFTWARE_ENGINEER]: `Uber is Big Tech focused on urban mobility and transportation, whose services include,\r\n        but are not limited to: ride-sharing, food and package delivery, couriers and freight transportation. The \"Session Management\" team, from which I am a member,\r\n        is responsible for taking care of all matters related to user's authentication and user's identity evaluation, as well as control of user's sessions. As a Backend Engineer,\r\n        my responsibilities include:`,\r\n    [WorkExperienceEnum.OPUS_SENIOR_TECH_LEAD]: `OPUS Software is a software development consulting company based in São Paulo - Brazil. As Tech Lead and Senior \r\n        Developer, my responsibilities consisted mostly of designing solutions, coding, performing code review and assisting my colleagues in order to come out \r\n        with the best solutions and practices. Some of the projects I was involved are given as follows:`,\r\n    [WorkExperienceEnum.OPUS_INTERMEDIATE_DEVELOPER]: `Due to the fact that OPUS Software is a consulting company, I had the opportunity of working in many different \r\n        projects and with a variety of technologies. As a Software Developer, the main projects I was involved to were:`,\r\n    [WorkExperienceEnum.AUDAXWARE]: `Audaxware is a startup based in Austin - Texas whose product is a project planning system. Back in 2015 they had legacy system \r\n        which was developed using ASP.Net with a PostgreSQL database, and they wanted to change it to C#, AngularJS and SQL Server. My main contributions were:`,\r\n    [WorkExperienceEnum.OPUS_JR_SYSTEM_ANALYST]: `This one was my first job related to technology. I was just finishing my Bachelor's Degree when I got there, and \r\n        it provided a great environment for me to learn and grow as professional. The main projects I was involved were:`\r\n};\r\n\r\nexport const WorkExperienceDescriptionDictionary = <{ [id: string]: { [id: string]: string } }>{\r\n    [SystemLanguageEnum.EN_US]: english,\r\n    [SystemLanguageEnum.PT_BR]: portuguese\r\n};","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { SystemLanguageEnum } from '../models/enums/system-language.enum';\r\nimport { HardSkillEnum } from '../models/enums/hard-skill.enum';\r\n\r\nconst commons = <{ [id: string]: string }> {\r\n    [HardSkillEnum.ANGULAR]: 'AngularJS / Angular 2+',\r\n    [HardSkillEnum.AWS]: 'AWS',\r\n    [HardSkillEnum.C_SHARP]: 'C#',\r\n    [HardSkillEnum.DATA_WAREHOUSE]: 'Data Warehouse',\r\n    [HardSkillEnum.DESIGN_PATTERNS]: 'Design Patterns',\r\n    [HardSkillEnum.DDD]: 'DDD',\r\n    [HardSkillEnum.ENTITY_FRAMEWORK]: 'Entity Framework',\r\n    [HardSkillEnum.FRONT_TECHNOLOGIES]: 'HTML / CSS ',\r\n    [HardSkillEnum.GIT]: 'Git',\r\n    [HardSkillEnum.HIBERNATE]: 'Hibernate',\r\n    [HardSkillEnum.JAVA]: 'Java',\r\n    [HardSkillEnum.JAVASCRIPT_TYPESCRIPT]: 'Javascript / Typescript',\r\n    [HardSkillEnum.JENKINS]: 'Jenkins',\r\n    [HardSkillEnum.JIRA_CONFLUENCE]: 'Jira / Confluence',\r\n    [HardSkillEnum.JSON]: 'JSON',\r\n    [HardSkillEnum.JUNIT]: 'JUnit',\r\n    [HardSkillEnum.KENDO_UI]: 'Kendo UI',\r\n    [HardSkillEnum.MAVEN]: 'Maven',\r\n    [HardSkillEnum.MONGO_DB]: 'MongoDB',\r\n    [HardSkillEnum.MY_SQL]: 'My SQL',\r\n    [HardSkillEnum.NEO4J]: 'Neo4j',\r\n    [HardSkillEnum.OLAP]: 'OLAP',\r\n    [HardSkillEnum.POSTGRESQL]: 'PostgreSQL',\r\n    [HardSkillEnum.POSTMAN]: 'Postman',\r\n    [HardSkillEnum.REST]: 'REST / RESTFul',\r\n    [HardSkillEnum.SCRUM_KANBAN]: 'Scrum / Kanban',\r\n    [HardSkillEnum.SOAPUI]: 'SoapUI',\r\n    [HardSkillEnum.SPRING_BOOT]: 'Spring Boot',\r\n    [HardSkillEnum.SQL_SERVER]: 'SQL Server',\r\n    [HardSkillEnum.SWAGGER]: 'Swagger',\r\n    [HardSkillEnum.TDD]: 'TDD',\r\n    [HardSkillEnum.TFS]: 'TFS',\r\n    [HardSkillEnum.XML]: 'XML',\r\n    [HardSkillEnum.SONAR_QUBE]: 'SonarQube',\r\n    [HardSkillEnum.CI_CD]: 'CI/CD',\r\n    [HardSkillEnum.KIBANA]: 'Kibana',\r\n    [HardSkillEnum.GRAFANA]: 'Grafana',\r\n    [HardSkillEnum.M3]: 'M3',\r\n    [HardSkillEnum.CASSANDRA]: 'Cassandra',\r\n    [HardSkillEnum.PHABRICATOR_ARCANIST]: 'Phabricator/Arcanist',\r\n    [HardSkillEnum.OAUTH20]: 'OAuth 2.0',\r\n    [HardSkillEnum.JWT]: 'JWT',\r\n    [HardSkillEnum.GOLANG]: 'GoLang',\r\n}\r\n\r\nconst english = <{ [id: string]: string }> {\r\n    [HardSkillEnum.API_DESIGN]: 'API Design',\r\n    [HardSkillEnum.OOP]: 'OOP',\r\n    [HardSkillEnum.PROGRAMMING_LOGIC]: 'Programming Logic',\r\n};\r\n\r\nconst portuguese = <{ [id: string]: string }> {\r\n    [HardSkillEnum.API_DESIGN]: 'Design de API',\r\n    [HardSkillEnum.OOP]: 'POO',\r\n    [HardSkillEnum.PROGRAMMING_LOGIC]: 'Lógica de Programação',\r\n};\r\n\r\nexport const HardSkillsDictionary = <{ [id: string]: { [id: string]: string } }>{\r\n    [SystemLanguageEnum.EN_US]: Object.assign({}, commons, english),\r\n    [SystemLanguageEnum.PT_BR]: Object.assign({}, commons, portuguese),\r\n};\r\n\r\n","import { FixedLabelsAndTooltipsEnum } from \"../models/enums/fixed-labels-and-tooltips.enum\";\r\nimport { SystemLanguageEnum } from \"../models/enums/system-language.enum\";\r\n\r\nconst english = <{ [id: string]: string }> {\r\n    [FixedLabelsAndTooltipsEnum.BACK_TO_TOP_BTN_TOOLTIP]: 'Back to Top',\r\n    [FixedLabelsAndTooltipsEnum.CURRENT_LABEL]: 'Current'\r\n};\r\n\r\nconst portuguese = <{ [id: string]: string }> {\r\n    [FixedLabelsAndTooltipsEnum.BACK_TO_TOP_BTN_TOOLTIP]: 'Voltar ao Início',\r\n    [FixedLabelsAndTooltipsEnum.CURRENT_LABEL]: 'Atual'\r\n};\r\n\r\nexport const FixedLabelsAndTooltipsDictionary = <{ [id: string]: { [id: string]: string } }>{\r\n    [SystemLanguageEnum.EN_US]: english,\r\n    [SystemLanguageEnum.PT_BR]: portuguese\r\n};","export enum SkillLevelEnum {\r\n\r\n    ONE = 1.0,\r\n    ONE_AND_HALF = 1.5,\r\n    TWO = 2.0,\r\n    TWO_AND_HALF = 2.5,\r\n    THREE = 3.0,\r\n    THREE_AND_HALF = 3.5,\r\n    FOUR = 4.0,\r\n    FOUR_AND_HALF = 4.5,\r\n    MAX = 5.0\r\n}\r\n","import { SystemLanguageEnum } from '../models/enums/system-language.enum';\r\nimport { SchoolEnum } from '../models/enums/school.enum';\r\n\r\nconst english = <{ [id: string]: string }> {\r\n    [SchoolEnum.UFSCAR]: 'Federal University of São Carlos',\r\n    [SchoolEnum.SAPIENZA]: 'Sapienza Univerity of Rome'\r\n};\r\n\r\nconst portuguese = <{ [id: string]: string }> {\r\n    [SchoolEnum.UFSCAR]: 'Universidade Federal de São Carlos',\r\n    [SchoolEnum.SAPIENZA]: 'Università degli Studi di Roma \"La Sapienza\"'\r\n};\r\n\r\nexport const SchoolDictionary = <{ [id: string]: { [id: string]: string } }>{\r\n    [SystemLanguageEnum.EN_US]: english,\r\n    [SystemLanguageEnum.PT_BR]: portuguese\r\n};\r\n\r\n","export enum ThesisInfoEnum {\r\n\r\n    LINK_LABEL,\r\n    THESIS_TITLE,\r\n    TITLE_LABEL\r\n\r\n}\r\n","export enum HardSkillEnum {\r\n\r\n    PROGRAMMING_LOGIC,\r\n    OOP,\r\n    DATA_WAREHOUSE,\r\n    OLAP,\r\n    SQL_SERVER,\r\n    POSTGRESQL,\r\n    MY_SQL,\r\n    MONGO_DB,\r\n    NEO4J,\r\n    SCRUM_KANBAN,\r\n    JIRA_CONFLUENCE,\r\n    DDD,\r\n    TDD,\r\n    API_DESIGN,\r\n    DESIGN_PATTERNS,\r\n    SWAGGER,\r\n    POSTMAN,\r\n    SOAPUI,\r\n    JAVA,\r\n    SPRING_BOOT,\r\n    HIBERNATE,\r\n    C_SHARP,\r\n    ENTITY_FRAMEWORK,\r\n    JUNIT,\r\n    ANGULAR,\r\n    JAVASCRIPT_TYPESCRIPT,\r\n    KENDO_UI,\r\n    JSON,\r\n    XML,\r\n    FRONT_TECHNOLOGIES,\r\n    REST,\r\n    GIT,\r\n    MAVEN,\r\n    JENKINS,\r\n    AWS,\r\n    TFS,\r\n    SONAR_QUBE,\r\n    CI_CD,\r\n    KIBANA,\r\n    GRAFANA,\r\n    M3,\r\n    CASSANDRA,\r\n    PHABRICATOR_ARCANIST,\r\n    OAUTH20,\r\n    JWT,\r\n    GOLANG\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ScrollToConfigOptions, ScrollToService } from '@nicky-lenaers/ngx-scroll-to';\r\nimport { SystemLanguageEnum } from 'src/app/models/enums/system-language.enum';\r\nimport { MenuItem } from 'src/app/models/menu-item';\r\n\r\n@Component({\r\n  selector: 'ms-header-menu',\r\n  templateUrl: './ms-header-menu.component.html',\r\n  styleUrls: ['./ms-header-menu.component.css']\r\n})\r\nexport class MsHeaderMenuComponent implements OnInit {\r\n\r\n  @Input() items: MenuItem[] = [];\r\n  @Input() language: SystemLanguageEnum = SystemLanguageEnum.EN_US;\r\n\r\n  constructor(private scrollToService: ScrollToService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  /*\r\n   * Scrolls the screen to the target element\r\n   */\r\n  public scrollTo(target: string) {\r\n\r\n    const config: ScrollToConfigOptions = {\r\n      target: target\r\n    };\r\n\r\n    this.scrollToService.scrollTo(config);\r\n  }\r\n}\r\n","<div class=\"profile-page sidebar-collapse\">\r\n  <nav class=\"navbar navbar-expand-lg fixed-top navbar-transparent bg-info\" color-on-scroll=\"400\">\r\n    <div class=\"container\">\r\n      <div class=\"navbar-translate\">\r\n        <a class=\"navbar-brand\" data-toggle=\"modal\" data-target=\"#systemLanguageModal\"><i class=\"fa fa-language fa-2x\"></i></a>\r\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#menu\" aria-controls=\"menu\"\r\n          aria-expanded=\"false\" aria-label=\"Toggle menu\">\r\n          <span class=\"navbar-toggler-bar bar1\"></span>\r\n          <span class=\"navbar-toggler-bar bar2\"></span>\r\n          <span class=\"navbar-toggler-bar bar3\"></span>\r\n        </button>\r\n      </div>\r\n      <div class=\"collapse navbar-collapse justify-content-end\" id=\"menu\">\r\n        <ul class=\"navbar-nav\">\r\n          <li class=\"nav-item\" *ngFor=\"let item of items\">\r\n            <a class=\"nav-link\" (click)=\"scrollTo(item.target)\">{{ item.name | translate: 'MENU_ITEM':language }}</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n</div>\r\n\r\n<ms-system-language-modal [id]=\"'systemLanguageModal'\" [language]=\"language\"></ms-system-language-modal>","export class ExternalLink {\r\n\r\n    private _uri: string;\r\n    private _label: string;\r\n\r\n    constructor(uri?: string, label?: string)\r\n    constructor(uri: string, label: string) {\r\n        this._uri = uri;\r\n        this._label = label;\r\n    }\r\n\r\n    get uri(): string {\r\n        return this._uri;\r\n    }\r\n\r\n    set uri(uri: string) {\r\n        this._uri = uri;\r\n    }\r\n\r\n    get label(): string {\r\n        return this._label;\r\n    }\r\n\r\n    set label(label: string) {\r\n        this._label = label;\r\n    }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { MajorDictionary } from '../dictionaries/major.dictionary';\r\nimport { PositionDictionary } from '../dictionaries/position.dictionary';\r\nimport { MajorEnum } from '../models/enums/major.enum';\r\nimport { PositionEnum } from '../models/enums/position.enum';\r\nimport { SystemLanguageEnum } from '../models/enums/system-language.enum';\r\nimport { TranslationTypeEnum } from '../models/enums/translation-type.enum';\r\nimport { SystemLanguageService } from '../service/system-language.service';\r\nimport { TranslationService } from '../service/translation.service';\r\n\r\n@Pipe({\r\n  name: 'translate'\r\n})\r\nexport class TranslatePipe implements PipeTransform {\r\n\r\n  constructor(private translationService: TranslationService, \r\n    private languageService: SystemLanguageService) { }\r\n\r\n  transform(value: any, ...args: any[]): unknown {\r\n\r\n    if (value == null || value == undefined) {\r\n      return value;\r\n    }\r\n\r\n    let type: TranslationTypeEnum = args[0];\r\n    let language: SystemLanguageEnum = args[1];\r\n\r\n    return this.translationService.translate(language, type, value);\r\n  }\r\n\r\n  /**\r\n   * Join the Majors by using '/' as delimiter\r\n   * \r\n   * @param value \r\n   */\r\n  private transformMajors(value: MajorEnum[]): string {\r\n    let majors = new Array<string>(value.length);\r\n    for (let i = 0; i < value.length; i++) {\r\n      if (MajorDictionary[this.languageService.language][value[i]] != null) {\r\n        majors[i] = MajorDictionary[this.languageService.language][value[i]];\r\n      }\r\n    }\r\n    return this.filterAndJoin(majors);\r\n  }\r\n\r\n  /**\r\n   * Join the Positions by using '/' as delimiter\r\n   * \r\n   * @param value \r\n   */\r\n  private transformPositions(value: PositionEnum[]): string {\r\n\r\n    let positions = new Array<string>(value.length);\r\n    for (let i = 0; i < value.length; i++) {\r\n      if (PositionDictionary[this.languageService.language][value[i]] != null) {\r\n        positions[i] = PositionDictionary[this.languageService.language][value[i]];\r\n      }\r\n    }\r\n    return this.filterAndJoin(positions);\r\n  }\r\n\r\n  /**\r\n   * Filters the items by removing the ones that have no value and then join them\r\n   * \r\n   * @param items \r\n   */\r\n  private filterAndJoin(items: string[]): string {\r\n    // Join only the ones that are not null\r\n    return items.filter(function (item) { return item }).join(\" / \");\r\n  }\r\n\r\n}\r\n","import { SystemLanguageEnum } from '../models/enums/system-language.enum';\r\nimport { LinkedinInfoEnum } from '../models/enums/linkedin-info.enum';\r\n\r\nconst english = <{ [id: string]: string }> {\r\n    [LinkedinInfoEnum.LINK]: 'https://www.linkedin.com/in/mcbsilva',\r\n    [LinkedinInfoEnum.TOOLTIP]: 'Profile on LinkedIn'\r\n};\r\n\r\nconst portuguese = <{ [id: string]: string }> {\r\n    [LinkedinInfoEnum.LINK]: 'https://www.linkedin.com/in/mcbsilva/?locale=pt_BR',\r\n    [LinkedinInfoEnum.TOOLTIP]: 'Página do LinkedIn'\r\n};\r\n\r\nexport const LinkedinInfoDictionary = <{ [id: string]: { [id: string]: string } }>{\r\n    [SystemLanguageEnum.EN_US]: english,\r\n    [SystemLanguageEnum.PT_BR]: portuguese\r\n};\r\n\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { FixedLabelsAndTooltipsEnum } from '../models/enums/fixed-labels-and-tooltips.enum';\r\nimport { SystemLanguageEnum } from '../models/enums/system-language.enum';\r\nimport { TranslationTypeEnum } from '../models/enums/translation-type.enum';\r\nimport { Period } from '../models/period';\r\nimport { TranslationService } from '../service/translation.service';\r\nimport { DatePipe } from './date.pipe';\r\n\r\n@Pipe({\r\n  name: 'period'\r\n})\r\nexport class PeriodPipe implements PipeTransform {\r\n\r\n  constructor(private translationService: TranslationService,\r\n    private datePipe: DatePipe) { }\r\n\r\n  transform(value: Period, format: string, language: SystemLanguageEnum): any {\r\n\r\n    if (!value || !format) {\r\n      return value;\r\n    }\r\n\r\n    if (value.end != null) {\r\n      return `${this.datePipe.transform(value.start, format)} - ${this.datePipe.transform(value.end, format)}`;\r\n    }\r\n\r\n    return `${this.datePipe.transform(value.start, format)} - \r\n      ${this.translationService.translate(language, TranslationTypeEnum.FIXED_LABELS_AND_TOOLTIPS, FixedLabelsAndTooltipsEnum.CURRENT_LABEL)}`;\r\n  }\r\n\r\n}\r\n","import { SystemLanguageEnum } from '../models/enums/system-language.enum';\r\nimport { LanguageEnum } from '../models/enums/language.enum';\r\n\r\nconst english = <{ [id: string]: string }> {\r\n    [LanguageEnum.PORTUGUESE]: 'Portuguese',\r\n    [LanguageEnum.ENGLISH]: 'English',\r\n    [LanguageEnum.ITALIAN]: 'Italian',\r\n    [LanguageEnum.SPANISH]: 'Spanish',\r\n    [LanguageEnum.FRENCH]: 'French'\r\n};\r\n\r\nconst portuguese = <{ [id: string]: string }> {\r\n    [LanguageEnum.PORTUGUESE]: 'Português',\r\n    [LanguageEnum.ENGLISH]: 'Inglês',\r\n    [LanguageEnum.ITALIAN]: 'Italiano',\r\n    [LanguageEnum.SPANISH]: 'Espanhol',\r\n    [LanguageEnum.FRENCH]: 'Francês'\r\n};\r\n\r\nexport const LanguageDictionary = <{ [id: string]: { [id: string]: string } }>{\r\n    [SystemLanguageEnum.EN_US]: english,\r\n    [SystemLanguageEnum.PT_BR]: portuguese\r\n};\r\n\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Certification } from 'src/app/models/certification';\r\nimport { SystemLanguageService } from 'src/app/service/system-language.service';\r\n\r\n@Component({\r\n  selector: 'ms-certification-item',\r\n  templateUrl: './ms-certification-item.component.html',\r\n  styleUrls: ['./ms-certification-item.component.css']\r\n})\r\nexport class MsCertificationItemComponent implements OnInit {\r\n\r\n  @Input() info: Certification = new Certification();\r\n\r\n  constructor(private systemLanguageService: SystemLanguageService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  get format(): string {\r\n    return this.systemLanguageService.format;\r\n  }\r\n\r\n}\r\n","<div class=\"card ms-certification\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-3 bg-info ms-certification-header card-body\">\r\n            <p class=\"date\">{{ info.date | date: format | titlecase }}</p>\r\n            <p class=\"provider\">{{ info.provider }}</p>\r\n        </div>\r\n        <div class=\"col-sm-9 ms-certification-body card-body\">\r\n            <p class=\"h5\">{{ info.name }}</p>\r\n        </div>\r\n    </div>\r\n</div>","import { SystemLanguageEnum } from '../models/enums/system-language.enum';\r\nimport { MajorDegreeEnum } from '../models/enums/major-degree.enum';\r\n\r\nconst english = <{ [id: string]: string }> {\r\n    [MajorDegreeEnum.MASTER]: `Master's Degree`,\r\n    [MajorDegreeEnum.BACHELOR]: `Bachelor's Degree`,\r\n    [MajorDegreeEnum.ACADEMIC_EXCHANGE]: `Academic Exchange`\r\n};\r\n\r\nconst portuguese = <{ [id: string]: string }> {\r\n    [MajorDegreeEnum.MASTER]: 'Mestrado Acadêmico',\r\n    [MajorDegreeEnum.BACHELOR]: 'Bacharelado',\r\n    [MajorDegreeEnum.ACADEMIC_EXCHANGE]: 'Intercâmbio Acadêmico'\r\n};\r\n\r\nexport const MajorDegreeDictionary = <{ [id: string]: { [id: string]: string } }>{\r\n    [SystemLanguageEnum.EN_US]: english,\r\n    [SystemLanguageEnum.PT_BR]: portuguese\r\n};\r\n\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { SystemLanguageEnum } from 'src/app/models/enums/system-language.enum';\r\n\r\n@Component({\r\n  selector: 'ms-footer',\r\n  templateUrl: './ms-footer.component.html',\r\n  styleUrls: ['./ms-footer.component.css']\r\n})\r\nexport class MsFooterComponent implements OnInit {\r\n\r\n  @Input() language: SystemLanguageEnum = SystemLanguageEnum.EN_US;\r\n\r\n  public currentYear = new Date().getFullYear();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer class=\"footer\">\r\n    <div class=\"text-center\">\r\n        <ms-btn-linkedin [position]=\"'top'\" [language]=\"language\"></ms-btn-linkedin>\r\n    </div>\r\n\r\n    <div class=\"h4 title text-center mt-0\">Camila Silva</div>\r\n    <div class=\"text-center text-muted\">\r\n        <p>&copy; {{currentYear}}</p>\r\n    </div>\r\n</footer>","export enum LinkedinInfoEnum {\r\n\r\n    LINK,\r\n    TOOLTIP\r\n\r\n}\r\n","export enum SystemLanguageEnum {\r\n\r\n    EN_US = 'EN_US',\r\n    PT_BR = 'PT_BR'\r\n}\r\n","export enum MajorEnum {\r\n\r\n    COMPUTER_SCIENCE,\r\n    BUSINESS_INTELLIGENCE\r\n\r\n}\r\n","export enum TitleEnum {\r\n\r\n    ABOUT_ME,\r\n    DETAILS,\r\n    AGE,\r\n    EMAIL,\r\n    PHONE,\r\n    LOCATION,\r\n    LANGUAGES,\r\n    WORK_EXPERIENCE,\r\n    EDUCATION,\r\n    SKILLS,\r\n    CERTIFICATIONS\r\n\r\n}\r\n","import { AboutMeInfoEnum } from \"./enums/about-me-info.enum\";\r\nimport { TitleEnum } from \"./enums/title.enum\";\r\n\r\nexport class AboutMeDetailItem {\r\n\r\n    private _title: TitleEnum;\r\n    private _info: AboutMeInfoEnum;\r\n\r\n    constructor(title?: TitleEnum, info?: AboutMeInfoEnum)\r\n    constructor(title: TitleEnum, info: AboutMeInfoEnum) {\r\n        this._title = title;\r\n        this._info = info;\r\n    }\r\n\r\n    get title(): TitleEnum {\r\n        return this._title;\r\n    }\r\n\r\n    set title(title: TitleEnum) {\r\n        this._title = title;\r\n    }\r\n\r\n    get info(): AboutMeInfoEnum {\r\n        return this._info;\r\n    }\r\n\r\n    set info(info: AboutMeInfoEnum) {\r\n        this._info = info;\r\n    }\r\n\r\n}\r\n","export enum WorkExperienceTechnologyEnum {\r\n\r\n    JAVA_11 = \"Java11\",\r\n    SPRING_BOOT = \"Spring Boot\",\r\n    ANGULAR_6 = \"Angular 6\",\r\n    POSTGRESQL = \"POstgreSQL\",\r\n    AWS = \"AWS\",\r\n    GIT = \"Git\",\r\n    JIRA = \"Jira\",\r\n    SCRUM = \"Scrum\",\r\n    JENKINS = \"Jenkins\",\r\n    SONAR_QUBE = \"SonarQube\",\r\n    JAVA_8 = \"Java8\",\r\n    ANGULAR_2 = \"Angular 2\",\r\n    MY_SQL = \"My SQL\",\r\n    C_SHARP = \"C#\",\r\n    SQL_SERVER = \"SQL Server\",\r\n    ANGULAR_JS = \"AngularJS\",\r\n    KENDO_UI = \"Kendo UI\",\r\n    MATERIAL = \"Material\",\r\n    AZURE = \"Azure\",\r\n    WEB_JOB = \"Web Job\",\r\n    TFS = \"TFS\",\r\n    KANBAN = \"Kanban\",\r\n    KNOCKOUT = \"Knockout\",\r\n    BOOTSTRAP = \"Bootstrap\",\r\n    GO = \"GoLang\",\r\n    KIBANA = \"Kibana\",\r\n    GRAFANA = \"Grafana\",\r\n    CPLUS2 = \"C++\",\r\n    LUA = \"Lua\",\r\n    M3 = \"M3\",\r\n    CASSANDRA = \"Cassandra\",\r\n    PHABRICATOR = \"Phabricator\",\r\n    ARCANIST = \"Arcanist\",\r\n    CICD = \"CI/CD\",\r\n    OAUTH20 = \"OAuth 2.0\"\r\n}\r\n","import { ActivityTypeEnum } from './enums/activity-type.enum';\r\n\r\nexport class ActivityItem {\r\n\r\n    private _type: ActivityTypeEnum;\r\n    private _description: string;\r\n\r\n    constructor(type?: ActivityTypeEnum, description?: string)\r\n    constructor(type: ActivityTypeEnum, description: string) {\r\n        this._type = type;\r\n        this._description = description;\r\n    }\r\n\r\n    get description(): string {\r\n        return this._description;\r\n    }\r\n\r\n    set description(description: string) {\r\n        this._description = description;\r\n    }\r\n\r\n    get iconClass(): string {\r\n        switch (this._type) {\r\n            case ActivityTypeEnum.CODING:\r\n                return 'fa-code';\r\n            case ActivityTypeEnum.DATABASE:\r\n                return 'fa-database';\r\n            case ActivityTypeEnum.SUPPORT:\r\n                return 'fa-info-circle';\r\n            case ActivityTypeEnum.ARCHITECTURE:\r\n                return 'fa-duotone fa-sitemap';\r\n            default:\r\n                return 'fa-code'\r\n        }\r\n    }\r\n}\r\n","export enum AboutMeInfoEnum {\r\n\r\n    BIO,\r\n    AGE,\r\n    PHONE,\r\n    EMAIL,\r\n    LOCATION\r\n}\r\n","export enum LocaleEnum {\r\n\r\n    SOROCABA,\r\n    ROME,\r\n    SAO_PAULO\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { SystemLanguageEnum } from '../models/enums/system-language.enum';\r\nimport { TranslationTypeEnum } from '../models/enums/translation-type.enum';\r\nimport { TranslationService } from '../service/translation.service';\r\n\r\n@Pipe({\r\n  name: 'positions'\r\n})\r\nexport class PositionsPipe implements PipeTransform {\r\n\r\n  constructor(private translationService: TranslationService) {}\r\n\r\n  transform(positions: any[], language: SystemLanguageEnum): string | null {\r\n\r\n    if (!positions || positions.length <= 0) {\r\n      return null;\r\n    }\r\n\r\n    if (language !== undefined) {\r\n      positions = positions.map(position => this.translationService.translate(language, TranslationTypeEnum.POSITION, position));\r\n      \r\n    }\r\n\r\n    return positions.join(\" / \");\r\n  }\r\n\r\n}\r\n","export enum MenuItemEnum {\r\n\r\n    ABOUT_ME,\r\n    WORK_EXPERIENCE,\r\n    EDUCATION,\r\n    SKILLS,\r\n    CERTIFICATION\r\n\r\n}\r\n","export enum ActivityTypeEnum {\r\n    CODING = \"fa-code\",\r\n    DATABASE = \"fa-database\",\r\n    SUPPORT = \"fa-info-circle\",\r\n    ARCHITECTURE = \"fa-duotone fa-sitemap\",\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\n\r\nimport * as AOS from 'aos';\r\n\r\nimport { MenuItemEnum } from './models/enums/menu-item.enum';\r\nimport { PositionEnum } from './models/enums/position.enum';\r\nimport { HeaderInfo } from './models/header-info';\r\nimport { MenuItem } from './models/menu-item';\r\nimport { SystemLanguageService } from './service/system-language.service';\r\nimport { SystemLanguageEnum } from './models/enums/system-language.enum';\r\nimport { Resume } from './models/resume';\r\nimport { ResumeService } from './service/resume.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n\r\n  public systemLanguage: SystemLanguageEnum;\r\n\r\n  public menuItems: MenuItem[];\r\n  public headerInfo: HeaderInfo;\r\n  public resume: Resume;\r\n\r\n  constructor(private systemLanguageService: SystemLanguageService,\r\n    private resumeService: ResumeService) {\r\n\r\n    this.systemLanguage = this.systemLanguageService.language;\r\n\r\n    this.menuItems = [\r\n      new MenuItem(MenuItemEnum.ABOUT_ME, '#about'),\r\n      new MenuItem(MenuItemEnum.WORK_EXPERIENCE, '#experience'),\r\n      new MenuItem(MenuItemEnum.EDUCATION, '#education'),\r\n      new MenuItem(MenuItemEnum.SKILLS, '#mySkills'),\r\n      new MenuItem(MenuItemEnum.CERTIFICATION, '#certifications')\r\n    ];\r\n\r\n    this.headerInfo = new HeaderInfo('Camila Silva', [PositionEnum.SOFTWARE_ENGINEER], 'assets/images/me.jpeg');\r\n\r\n    this.resume = this.resumeService.get();\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.systemLanguageService.languageObservable.subscribe((language) => {\r\n      this.systemLanguage = language;\r\n      this.resume = this.resumeService.get();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.systemLanguageService.languageObservable.unsubscribe();\r\n  }\r\n}\r\n","<header>\r\n  <ms-header-menu [items]=\"menuItems\" [language]=\"systemLanguage\"></ms-header-menu>\r\n</header>\r\n<div class=\"page-content\">\r\n  <ms-header-body [info]=\"headerInfo\" [language]=\"systemLanguage\"></ms-header-body>\r\n  <div class=\"section pb-0\" id=\"about\">\r\n    <ms-about-me [info]=\"resume.aboutMe\" [language]=\"systemLanguage\"></ms-about-me>\r\n  </div>\r\n  <div class=\"section pb-0\" id=\"experience\">\r\n    <div class=\"container\">\r\n      <ms-work-experience [experiences]=\"resume.workExperiences\" [language]=\"systemLanguage\"></ms-work-experience>\r\n    </div>\r\n  </div>\r\n  <div class=\"section pb-0\" id=\"education\">\r\n    <div class=\"container\">\r\n      <ms-education [items]=\"resume.education\" [language]=\"systemLanguage\"></ms-education>      \r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"section pb-0\" id=\"mySkills\">\r\n    <div class=\"container\">\r\n      <ms-skills [skills]=\"resume.skills\" [language]=\"systemLanguage\"></ms-skills>\r\n    </div>\r\n  </div>\r\n  <div class=\"section pb-0\" id=\"certifications\">\r\n    <div class=\"container\">\r\n      <ms-certifications [items]=\"resume.certifications\" [language]=\"systemLanguage\"></ms-certifications>\r\n    </div>\r\n  </div>\r\n  <ms-back-to-top-button [language]=\"systemLanguage\"></ms-back-to-top-button>\r\n</div>\r\n<ms-footer [language]=\"systemLanguage\"></ms-footer>","import { HardSkillEnum } from \"./enums/hard-skill.enum\";\r\nimport { SkillLevelEnum } from \"./enums/skill-level.enum\";\r\n\r\nexport class HardSkill {\r\n\r\n    private _skill: HardSkillEnum;\r\n    private _level: SkillLevelEnum;\r\n\r\n    constructor(skill?: HardSkillEnum, level?: SkillLevelEnum)\r\n    constructor(skill: HardSkillEnum, level: SkillLevelEnum) {\r\n        this._skill = skill;\r\n        this._level = level;\r\n    }\r\n\r\n    get skill(): HardSkillEnum {\r\n        return this._skill;\r\n    }\r\n\r\n    set skill(skill: HardSkillEnum) {\r\n        this._skill = skill;\r\n    }\r\n\r\n    get level(): SkillLevelEnum {\r\n        return this._level;\r\n    }\r\n\r\n    set level(level: SkillLevelEnum) {\r\n        this._level = level;\r\n    }\r\n\r\n}\r\n","export enum TranslationTypeEnum {\r\n\r\n    MAJOR_DEGREE = 'MAJOR_DEGREE',\r\n    MAJOR = 'MAJOR',\r\n    LOCALE = 'LOCALE',\r\n    SCHOOL = 'SCHOOL',\r\n    LANGUAGE = 'LANGUAGE',\r\n    TITLE = 'TITLE',\r\n    MENU_ITEM = 'MENU_ITEM',\r\n    SOFT_SKILL = 'SOFT_SKILL',\r\n    HARD_SKILL = 'HARD_SKILL',\r\n    POSITION = 'POSITION',\r\n    SYSTEM_LANGUAGE = 'SYSTEM_LANGUAGE',\r\n    ABOUT_ME_INFO = 'ABOUT_ME_INFO',\r\n    WORK_EXPERIENCE_DESCRIPTION = 'WORK_EXPERIENCE_DESCRIPTION',\r\n    WORK_EXPERIENCE_ACTIVITY = 'WORK_EXPERIENCE_ACTIVITY',\r\n    PERIOD = 'PERIOD',\r\n    THESIS_INFO = 'THESIS_INFO',\r\n    LINKEDIN_INFO = 'LINKEDIN_INFO',\r\n    FIXED_LABELS_AND_TOOLTIPS = 'FIXED_LABELS_AND_TOOLTIPS',\r\n    RESUME_INFO = 'RESUME_INFO',\r\n    COMPANY_WEBSITE = 'COMPANY_WEBSITE',\r\n    SCHOOL_WEBSITE = 'SCHOOL_WEBSITE'\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AboutMeInfoDictionary } from '../dictionaries/about-me-info.dictionary';\r\nimport { CompanyWebsiteDictionary } from '../dictionaries/company-website.dictionary';\r\nimport { FixedLabelsAndTooltipsDictionary } from '../dictionaries/fixed-labels-and-tooltips.dictionary';\r\nimport { HardSkillsDictionary } from '../dictionaries/hard-skills.dictionary';\r\nimport { LanguageDictionary } from '../dictionaries/language.dictionary';\r\nimport { LinkedinInfoDictionary } from '../dictionaries/linkedin-info.dictionary';\r\nimport { LocaleDictionary } from '../dictionaries/locale.dictionary';\r\nimport { MajorDegreeDictionary } from '../dictionaries/major-degree.dictionary';\r\nimport { MajorDictionary } from '../dictionaries/major.dictionary';\r\nimport { MenuItemDictionary } from '../dictionaries/menu-item.dictionary';\r\nimport { PositionDictionary } from '../dictionaries/position.dictionary';\r\nimport { ResumeInfoDictionary } from '../dictionaries/resume-info.dictionary';\r\nimport { SchoolWebsiteDictionary } from '../dictionaries/school-website.dictionary';\r\nimport { SchoolDictionary } from '../dictionaries/school.dictionary';\r\nimport { SoftSkillsDictionary } from '../dictionaries/soft-skill.dictionary';\r\nimport { SystemLanguageDictionary } from '../dictionaries/system-language.dictionary';\r\nimport { ThesisInfoDictionary } from '../dictionaries/thesis-info.dictionary';\r\nimport { TitleDictionary } from '../dictionaries/title.dictionary';\r\nimport { WorkExperienceActivitiesDictionary } from '../dictionaries/work-experience-activities.dictionary';\r\nimport { WorkExperienceDescriptionDictionary } from '../dictionaries/work-experience-description.dictionary';\r\nimport { SystemLanguageEnum } from '../models/enums/system-language.enum';\r\nimport { TranslationTypeEnum } from '../models/enums/translation-type.enum';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TranslationService {\r\n\r\n  constructor() { }\r\n\r\n  translate(language: SystemLanguageEnum, type: TranslationTypeEnum, value: any): any {\r\n\r\n    if (value == null || value == undefined) {\r\n      return value;\r\n    }\r\n\r\n    let translatedValue: any;\r\n    switch (type) {\r\n      case TranslationTypeEnum.MAJOR_DEGREE:\r\n        translatedValue = MajorDegreeDictionary[language][value];\r\n        break;\r\n      case TranslationTypeEnum.MAJOR:\r\n        translatedValue = MajorDictionary[language][value];\r\n        break;\r\n      case TranslationTypeEnum.LOCALE:\r\n        translatedValue = LocaleDictionary[language][value];\r\n        break;\r\n      case TranslationTypeEnum.SCHOOL:\r\n        translatedValue = SchoolDictionary[language][value];\r\n        break;\r\n      case TranslationTypeEnum.LANGUAGE:\r\n        translatedValue = LanguageDictionary[language][value];\r\n        break;\r\n      case TranslationTypeEnum.TITLE:\r\n        translatedValue = TitleDictionary[language][value];\r\n        break;\r\n      case TranslationTypeEnum.MENU_ITEM:\r\n        translatedValue = MenuItemDictionary[language][value];\r\n        break;\r\n      case TranslationTypeEnum.SOFT_SKILL:\r\n        translatedValue = SoftSkillsDictionary[language][value];\r\n        break;\r\n      case TranslationTypeEnum.HARD_SKILL:\r\n        translatedValue = HardSkillsDictionary[language][value];\r\n        break;\r\n      case TranslationTypeEnum.POSITION:\r\n        translatedValue = PositionDictionary[language][value];\r\n        break;\r\n      case TranslationTypeEnum.SYSTEM_LANGUAGE:\r\n        translatedValue = SystemLanguageDictionary[language][value];\r\n        break;\r\n      case TranslationTypeEnum.ABOUT_ME_INFO:\r\n        translatedValue = AboutMeInfoDictionary[language][value];\r\n        break;\r\n      case TranslationTypeEnum.WORK_EXPERIENCE_DESCRIPTION:\r\n        translatedValue = WorkExperienceDescriptionDictionary[language][value];\r\n        break;\r\n      case TranslationTypeEnum.WORK_EXPERIENCE_ACTIVITY:\r\n        translatedValue = WorkExperienceActivitiesDictionary[language][value];\r\n        break;\r\n      case TranslationTypeEnum.THESIS_INFO:\r\n        translatedValue = ThesisInfoDictionary[language][value];\r\n        break;\r\n      case TranslationTypeEnum.LINKEDIN_INFO:\r\n        translatedValue = LinkedinInfoDictionary[language][value];\r\n        break;\r\n      case TranslationTypeEnum.FIXED_LABELS_AND_TOOLTIPS:\r\n        translatedValue = FixedLabelsAndTooltipsDictionary[language][value];\r\n        break;\r\n      case TranslationTypeEnum.RESUME_INFO:\r\n        translatedValue = ResumeInfoDictionary[language][value];\r\n        break;\r\n      case TranslationTypeEnum.COMPANY_WEBSITE:\r\n        translatedValue = CompanyWebsiteDictionary[language][value];\r\n        break;\r\n      case TranslationTypeEnum.SCHOOL_WEBSITE:\r\n          translatedValue = SchoolWebsiteDictionary[language][value];\r\n          break;\r\n      default:\r\n        return value;\r\n    }\r\n\r\n    if (translatedValue == null || translatedValue == undefined) {\r\n      return value;\r\n    }\r\n\r\n    return translatedValue;\r\n  }\r\n}\r\n","import { SystemLanguageEnum } from '../models/enums/system-language.enum';\r\nimport { CompanyEnum } from '../models/enums/company.enum';\r\n\r\nconst english = <{ [id: string]: string }> {\r\n    [CompanyEnum.AUDAXWARE]: 'https://www.audaxware.com',\r\n    [CompanyEnum.OPUS]: 'https://www.opus-software.com.br/en/better-for-enus',\r\n    [CompanyEnum.UBER]: 'https://www.uber.com'\r\n};\r\n\r\nconst portuguese = <{ [id: string]: string }> {\r\n    [CompanyEnum.AUDAXWARE]: 'https://www.audaxware.com',\r\n    [CompanyEnum.OPUS]: 'https://www.opus-software.com.br',\r\n    [CompanyEnum.UBER]: 'https://www.uber.com/br/pt-br'\r\n};\r\n\r\nexport const CompanyWebsiteDictionary = <{ [id: string]: { [id: string]: string } }>{\r\n    [SystemLanguageEnum.EN_US]: english,\r\n    [SystemLanguageEnum.PT_BR]: portuguese\r\n};\r\n\r\n","import { AboutMeDetailItem } from './about-me-detail-item';\r\nimport { LanguageLevel } from './language-level';\r\n\r\nexport class AboutMe {\r\n   \r\n    private _details: AboutMeDetailItem[];\r\n    private _languages: LanguageLevel[];\r\n    private _bioParagraphs: string[] | undefined;\r\n    \r\n    constructor(details?: AboutMeDetailItem[], languages?: LanguageLevel[], bioParagraphs?: string[], )\r\n    constructor(details: AboutMeDetailItem[], languages: LanguageLevel[], bioParagraphs: string[]) {\r\n        this._bioParagraphs = bioParagraphs;\r\n        this._details = details;\r\n        this._languages = languages;\r\n    }\r\n\r\n    get bioParagraphs(): string[] | undefined {\r\n        return this._bioParagraphs;\r\n    }\r\n\r\n    set bioParagraphs(bioParagraphs: string[] | undefined) {\r\n        this._bioParagraphs = bioParagraphs;\r\n    }\r\n\r\n    get details(): AboutMeDetailItem[] {\r\n        return this._details;\r\n    }\r\n\r\n    set details(details: AboutMeDetailItem[]) {\r\n        this._details = details;\r\n    }\r\n\r\n    get languages(): LanguageLevel[] {\r\n        return this._languages;\r\n    }\r\n\r\n    set languages(languages: LanguageLevel[]) {\r\n        this._languages = languages;\r\n    }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { SoftSkillEnum } from 'src/app/models/enums/soft-skill.enum';\r\nimport { SystemLanguageEnum } from 'src/app/models/enums/system-language.enum';\r\n\r\n@Component({\r\n  selector: 'ms-soft-skills',\r\n  templateUrl: './ms-soft-skills.component.html',\r\n  styleUrls: ['./ms-soft-skills.component.css']\r\n})\r\nexport class MsSoftSkillsComponent implements OnInit {\r\n\r\n  @Input() skills: SoftSkillEnum[] = [];\r\n  @Input() language: SystemLanguageEnum = SystemLanguageEnum.EN_US;\r\n\r\n  public skillPairs: SoftSkillEnum[][] = [];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    // Splits the skills into pairs for the responsive layout\r\n    this.skillPairs = this.splitIntoPairs(this.skills)\r\n  }\r\n\r\n  /**\r\n   * Splits a set of skills into pairs\r\n   * \r\n   * @param skills \r\n   */\r\n  private splitIntoPairs(skills: SoftSkillEnum[]): SoftSkillEnum[][] {\r\n\r\n    let pairs: SoftSkillEnum[][] = [];\r\n    let pairIdx = -1;\r\n    \r\n    for (let i = 0; i < skills.length; i++) {\r\n      if (i % 2 == 0) {\r\n        pairIdx++;\r\n        pairs[pairIdx] = [];\r\n      }\r\n      pairs[pairIdx][i % 2] = skills[i];\r\n    }\r\n\r\n    return pairs;\r\n  }\r\n}\r\n","<div class=\"row ms-skill-group\" *ngFor=\"let pair of skillPairs\">\r\n    <p class=\"ms-skill col-lg-12 col-sm-6\" *ngFor=\"let skill of pair\">{{ skill | translate: 'SOFT_SKILL':language }}</p>\r\n</div>","export enum SoftSkillEnum {\r\n\r\n    TEAM_WORK,\r\n    COLLABORATION,\r\n    COMMITMENT,\r\n    CRITICAL_THINKING,\r\n    SELF_LEARNING,\r\n    ADAPTABILITY,\r\n    COMMUNICATION,\r\n    TIME_MANAGEMENT,\r\n    RESILIENCE,\r\n    PROBLEM_SOLVING,\r\n    LEADERSHIP,\r\n    ATTENTION_TO_DETAIL\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ActivityItem } from 'src/app/models/activity-item';\r\nimport { SystemLanguageEnum } from 'src/app/models/enums/system-language.enum';\r\nimport { TranslationTypeEnum } from 'src/app/models/enums/translation-type.enum';\r\nimport { WorkExperience } from 'src/app/models/work-experience';\r\nimport { TranslationService } from 'src/app/service/translation.service';\r\n\r\n@Component({\r\n  selector: 'ms-work-experience-item',\r\n  templateUrl: './ms-work-experience-item.component.html',\r\n  styleUrls: ['./ms-work-experience-item.component.css']\r\n})\r\nexport class MsWorkExperienceItemComponent implements OnInit {\r\n\r\n  private readonly TECHNOLOGIES_THRESHOLD: number = 9;\r\n\r\n  @Input() info: WorkExperience = new WorkExperience();\r\n  @Input() language: SystemLanguageEnum = SystemLanguageEnum.EN_US;\r\n\r\n  constructor(private translationService: TranslationService) { }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  get technologies(): string {\r\n    if (this.info && this.info.technologies && this.info.technologies.length > 0) {\r\n      if (this.info.technologies.length > this.TECHNOLOGIES_THRESHOLD) {\r\n        return this.info.technologies.slice(0, this.TECHNOLOGIES_THRESHOLD).join(', ');\r\n      }\r\n      return this.info.technologies.join(', ');\r\n    }\r\n    return '';\r\n  }\r\n\r\n  get showMoreTechnologiesIcon(): boolean {\r\n\r\n    if (!this.info) {\r\n      return false;\r\n    }\r\n\r\n    return this.info.technologies && this.info.technologies.length > this.TECHNOLOGIES_THRESHOLD;\r\n  }\r\n\r\n  get description(): string {\r\n    return this.translationService.translate(this.language, TranslationTypeEnum.WORK_EXPERIENCE_DESCRIPTION, this.info.identifier);\r\n  }\r\n\r\n  get activities(): ActivityItem[] {\r\n    return this.translationService.translate(this.language, TranslationTypeEnum.WORK_EXPERIENCE_ACTIVITY, this.info.identifier);\r\n  }\r\n\r\n  get companyWebsite(): String {\r\n    return this.translationService.translate(this.language, TranslationTypeEnum.COMPANY_WEBSITE, this.info.company);\r\n  }\r\n}\r\n","<div class=\"timeline-card-title\">\r\n    <div class=\"position\">\r\n        <span class=\"h5\">{{ info.positions | positions: language }}</span>\r\n    </div>\r\n    <div class=\"company\">\r\n        <a href=\"{{companyWebsite}}\" target=\"_blank\">{{ info.company }}</a>\r\n    </div>\r\n    <div class=\"period\">\r\n        <ms-btn-period [period]=\"info.period\"></ms-btn-period>\r\n    </div>\r\n</div>\r\n<div class=\"timeline-card-body\">\r\n    <p>{{ description }}</p>\r\n\r\n    <ul class=\"list-unstyled ms-main-projects\">\r\n        <li *ngFor=\"let activity of activities\">\r\n            <i class=\"fa ms-bullet\" [ngClass]=\"activity.iconClass\" aria-hidden=\"true\"></i>\r\n            {{ activity.description }}\r\n        </li>\r\n    </ul>\r\n</div>\r\n\r\n<div class=\"timeline-footer\">\r\n    <span class=\"text-info\">{{ technologies }}\r\n        <a *ngIf=\"showMoreTechnologiesIcon\" class=\"scroll-behavior-smooth\" href=\"#mySkills\">\r\n            <i class=\"fa fa-plus-circle\"></i>\r\n        </a>\r\n    </span>\r\n</div>","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { SystemLanguageEnum } from '../models/enums/system-language.enum';\r\nimport { TranslationTypeEnum } from '../models/enums/translation-type.enum';\r\nimport { TranslationService } from '../service/translation.service';\r\n\r\n@Pipe({\r\n  name: 'majors'\r\n})\r\nexport class MajorsPipe implements PipeTransform {\r\n\r\n  constructor(private translationService: TranslationService) {}\r\n\r\n  transform(majors: any[], language: SystemLanguageEnum): unknown {\r\n    \r\n    if (!majors || majors.length <= 0) {\r\n      return null;\r\n    }\r\n\r\n    if (language !== undefined) {\r\n      majors = majors.map(major => this.translationService.translate(language, TranslationTypeEnum.MAJOR, major));\r\n      \r\n    }\r\n\r\n    return majors.join(\" / \");\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { SystemLanguageEnum } from 'src/app/models/enums/system-language.enum';\r\nimport { Period } from 'src/app/models/period';\r\nimport { SystemLanguageService } from 'src/app/service/system-language.service';\r\n\r\n@Component({\r\n  selector: 'ms-btn-period',\r\n  templateUrl: './ms-btn-period.component.html',\r\n  styleUrls: ['./ms-btn-period.component.css']\r\n})\r\nexport class MsBtnPeriodComponent implements OnInit {\r\n\r\n  @Input() period: Period = new Period();\r\n\r\n  constructor(private SystemLanguageService: SystemLanguageService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  get format(): string {\r\n    return this.SystemLanguageService.format;\r\n  }\r\n\r\n  get language(): SystemLanguageEnum {\r\n    return this.SystemLanguageService.language;\r\n  }\r\n\r\n}\r\n","<button class=\"btn btn-dark btn-round ms-btn-period\">{{ period | period : format:language | titlecase }}</button>","export enum ResumeInfoEnum {\r\n\r\n    FILE_NAME_SUFFIX,\r\n    URI\r\n\r\n}\r\n","import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\r\n\r\nimport { SystemLanguageEnum } from 'src/app/models/enums/system-language.enum';\r\nimport { SystemLanguageService } from 'src/app/service/system-language.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'ms-system-language-modal',\r\n  templateUrl: './ms-system-language-modal.component.html',\r\n  styleUrls: ['./ms-system-language-modal.component.css']\r\n})\r\nexport class MsSystemLanguageModalComponent implements OnInit {\r\n\r\n  @Input() id: string = '';\r\n  @Input() language: SystemLanguageEnum = SystemLanguageEnum.EN_US;\r\n\r\n  @ViewChild('closeModalBtn') closeModalBtn!: ElementRef;\r\n\r\n\r\n  public options: any;\r\n\r\n  constructor(private systemLanguageService: SystemLanguageService) {\r\n    this.options = Object.keys(SystemLanguageEnum);\r\n  }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  public changeSystemLanguage(language: SystemLanguageEnum): void {\r\n    if (language !== this.systemLanguageService.language) {\r\n      this.systemLanguageService.language = language;\r\n    }\r\n    this.closeModalBtn.nativeElement.click();\r\n  }\r\n\r\n}\r\n","<div class=\"modal fade\" [id]=\"id\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered modal-sm\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body text-center\">\r\n                <div *ngFor=\"let option of options\">\r\n                    <div class=\"dropdown-divider\"></div>\r\n                    <div class=\"option\" (click)=\"changeSystemLanguage(option)\">{{ option | translate:\r\n                        'SYSTEM_LANGUAGE':language }}</div>\r\n                </div>\r\n                <div class=\"dropdown-divider\"></div>\r\n            </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" #closeModalBtn>Close</button>\r\n        </div>\r\n    </div>\r\n</div>","import { EducationAdditionalInfo } from './education-additional-info';\r\nimport { LocaleEnum } from './enums/locale.enum';\r\nimport { MajorDegreeEnum } from './enums/major-degree.enum';\r\nimport { MajorEnum } from './enums/major.enum';\r\nimport { SchoolEnum } from './enums/school.enum';\r\nimport { ExternalLink } from './external-link';\r\nimport { Period } from './period';\r\n\r\nexport class EducationItem {\r\n\r\n    private _school: SchoolEnum;\r\n    private _degree: MajorDegreeEnum;\r\n    private _major: MajorEnum[];\r\n    private _period: Period;\r\n    private _locale: LocaleEnum;\r\n    private _externalLink: ExternalLink;\r\n    private _additionalInfo: EducationAdditionalInfo;\r\n\r\n    constructor(school?: SchoolEnum, degree?: MajorDegreeEnum, major?: MajorEnum[], period?: Period, locale?: LocaleEnum, externalLink?: ExternalLink, additionalInfo?: EducationAdditionalInfo)\r\n    constructor(school: SchoolEnum, degree: MajorDegreeEnum, major: MajorEnum[], period: Period, locale: LocaleEnum, externalLink: ExternalLink, additionalInfo: EducationAdditionalInfo) {\r\n        this._school = school;\r\n        this._degree = degree;\r\n        this._major = major;\r\n        this._period = period;\r\n        this._locale = locale;\r\n        this._externalLink = externalLink;\r\n        this._additionalInfo = additionalInfo;\r\n    }\r\n\r\n    get school(): SchoolEnum {\r\n        return this._school;\r\n    }\r\n\r\n    set school(school: SchoolEnum) {\r\n        this._school = school;\r\n    }\r\n\r\n    get degree(): MajorDegreeEnum {\r\n        return this._degree;\r\n    }\r\n\r\n    set degree(degree: MajorDegreeEnum) {\r\n        this._degree = degree;\r\n    }\r\n\r\n    get major(): MajorEnum[] {\r\n        return this._major;\r\n    }\r\n\r\n    set major(major: MajorEnum[]) {\r\n        this._major = major;\r\n    }\r\n\r\n    get period(): Period {\r\n        return this._period;\r\n    }\r\n\r\n    set period(period: Period) {\r\n        this._period = period;\r\n    }\r\n\r\n    get locale(): LocaleEnum {\r\n        return this._locale;\r\n    }\r\n\r\n    set locale(locale: LocaleEnum) {\r\n        this._locale = locale;\r\n    }\r\n\r\n    get externalLink(): ExternalLink {\r\n        return this._externalLink;\r\n    }\r\n\r\n    set externalLink(externalLink: ExternalLink) {\r\n        this._externalLink = externalLink;\r\n    }\r\n\r\n    get additionalInfo(): EducationAdditionalInfo {\r\n        return this._additionalInfo;\r\n    }\r\n\r\n    set additionalInfo(additionalInfo: EducationAdditionalInfo) {\r\n        this._additionalInfo = additionalInfo;\r\n    }\r\n\r\n}\r\n","import { MonthYear } from \"./month-year\";\r\n\r\nexport class Certification {\r\n\r\n    private _name: string;\r\n    private _provider: string;\r\n    private _date: MonthYear;\r\n\r\n    constructor(name?: string, provider?: string, date?: MonthYear)\r\n    constructor(name: string, provider: string, date: MonthYear) {\r\n        this._name = name;\r\n        this._provider = provider;\r\n        this._date = date;\r\n    }\r\n\r\n    get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    set name(name: string) {\r\n        this._name = name;\r\n    }\r\n\r\n    get provider(): string {\r\n        return this._provider;\r\n    }\r\n\r\n    set provider(provider: string) {\r\n        this._provider = provider;\r\n    }\r\n\r\n    get date(): MonthYear {\r\n        return this._date;\r\n    }\r\n\r\n    set date(date: MonthYear) {\r\n        this._date = date;\r\n    }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { ScrollToModule } from '@nicky-lenaers/ngx-scroll-to';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n// Components\r\nimport { AppComponent } from './app.component';\r\nimport { MsBackToTopButtonComponent } from './components/ms-back-to-top-button/ms-back-to-top-button.component';\r\nimport { MsHeaderMenuComponent } from './components/ms-header-menu/ms-header-menu.component';\r\nimport { MsHeaderBodyComponent } from './components/ms-header-body/ms-header-body.component';\r\nimport { MsAboutMeComponent } from './components/about-me/ms-about-me/ms-about-me.component';\r\nimport { MsLanguageLevelComponent } from './components/ms-language-level/ms-language-level.component';\r\nimport { MsWorkExperienceComponent } from './components/work-experience/ms-work-experience/ms-work-experience.component';\r\nimport { MsWorkExperienceItemComponent } from './components/work-experience/ms-work-experience-item/ms-work-experience-item.component';\r\nimport { MsEducationComponent } from './components/education/ms-education/ms-education.component';\r\nimport { MsEducationItemComponent } from './components/education/ms-education-item/ms-education-item.component';\r\nimport { MsBtnPeriodComponent } from './components/ms-btn-period/ms-btn-period.component';\r\nimport { MsAboutMeDetailItemComponent } from './components/about-me/ms-about-me-detail-item/ms-about-me-detail-item.component';\r\nimport { MsCertificationsComponent } from './components/certifications/ms-certifications/ms-certifications.component';\r\nimport { MsCertificationItemComponent } from './components/certifications/ms-certification-item/ms-certification-item.component';\r\nimport { MsSkillsComponent } from './components/skills/ms-skills/ms-skills.component';\r\nimport { MsSoftSkillsComponent } from './components/skills/ms-soft-skills/ms-soft-skills.component';\r\nimport { MsHardSkillsComponent } from './components/skills/ms-hard-skills/ms-hard-skills.component';\r\nimport { MsHardSkillsItemComponent } from './components/skills/ms-hard-skills-item/ms-hard-skills-item.component';\r\nimport { MsFooterComponent } from './components/ms-footer/ms-footer.component';\r\nimport { MsBtnLinkedinComponent } from './components/ms-btn-linkedin/ms-btn-linkedin.component';\r\nimport { MsSystemLanguageModalComponent } from './components/ms-system-language-modal/ms-system-language-modal.component';\r\n\r\n// Pipes\r\nimport { PositionsPipe } from './pipes/positions.pipe';\r\nimport { MajorsPipe } from './pipes/majors.pipe';\r\nimport { PeriodPipe } from './pipes/period.pipe';\r\nimport { DatePipe } from './pipes/date.pipe';\r\nimport { TranslatePipe } from './pipes/translate.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    // Components\r\n    AppComponent,\r\n    MsBackToTopButtonComponent,\r\n    MsHeaderMenuComponent,\r\n    MsHeaderBodyComponent,\r\n    MsAboutMeComponent,\r\n    MsLanguageLevelComponent,\r\n    MsWorkExperienceComponent,\r\n    MsWorkExperienceItemComponent,\r\n    MsEducationComponent,\r\n    MsEducationItemComponent,\r\n    MsBtnPeriodComponent,\r\n    MsAboutMeDetailItemComponent,\r\n    MsCertificationsComponent,\r\n    MsCertificationItemComponent,\r\n    MsSkillsComponent,\r\n    MsSoftSkillsComponent,\r\n    MsHardSkillsComponent,\r\n    MsHardSkillsItemComponent,\r\n    MsFooterComponent,\r\n    MsBtnLinkedinComponent,\r\n    MsSystemLanguageModalComponent,\r\n\r\n    // Pipes\r\n    PeriodPipe,\r\n    TranslatePipe,\r\n    DatePipe,\r\n    PositionsPipe,\r\n    MajorsPipe\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ScrollToModule.forRoot(),\r\n    NgbModule\r\n  ],\r\n  providers: [DatePipe],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export enum PositionEnum {\r\n\r\n    TECH_LEAD,\r\n    SENIOR_SOFTWARE_DEVELOPER,\r\n    INTERMEDIATE_SOFTWARE_DEVELOPER,\r\n    WEB_DEVELOPER,\r\n    SYSTEM_ANALYST,\r\n    SOFTWARE_ENGINEER\r\n}\r\n","import { MonthYear } from './month-year';\r\n\r\nexport class Period {\r\n\r\n    private _start: MonthYear;\r\n    private _end: MonthYear;\r\n\r\n    constructor(start?: MonthYear, end?: MonthYear)\r\n    constructor(start: MonthYear, end: MonthYear) {\r\n        this._start = start;\r\n        this._end = end;\r\n    }\r\n\r\n    get start(): MonthYear {\r\n        return this._start;\r\n    }\r\n\r\n    set start(start: MonthYear) {\r\n        this._start = start;\r\n    }\r\n\r\n    get end(): MonthYear {\r\n        return this._end;\r\n    }\r\n\r\n    set end(end: MonthYear) {\r\n        this._end = end;\r\n    }\r\n\r\n}\r\n","import { SystemLanguageEnum } from '../models/enums/system-language.enum';\r\nimport { SoftSkillEnum } from '../models/enums/soft-skill.enum';\r\n\r\nconst english = <{ [id: string]: string }> {\r\n    [SoftSkillEnum.ADAPTABILITY]: 'Adaptability',\r\n    [SoftSkillEnum.ATTENTION_TO_DETAIL]: 'Attention to Detail',\r\n    [SoftSkillEnum.COLLABORATION]: 'Collaboration',\r\n    [SoftSkillEnum.COMMITMENT]: 'Commitment',\r\n    [SoftSkillEnum.COMMUNICATION]: 'Communication',\r\n    [SoftSkillEnum.CRITICAL_THINKING]: 'Critical Thinking',\r\n    [SoftSkillEnum.LEADERSHIP]: 'Leadership',\r\n    [SoftSkillEnum.PROBLEM_SOLVING]: 'Problem Solving',\r\n    [SoftSkillEnum.RESILIENCE]: 'Resilience',\r\n    [SoftSkillEnum.SELF_LEARNING]: 'Self-learning',\r\n    [SoftSkillEnum.TEAM_WORK]: 'Teamwork',\r\n    [SoftSkillEnum.TIME_MANAGEMENT]: 'Time Management'\r\n    \r\n};\r\n\r\nconst portuguese = <{ [id: string]: string }> {\r\n    [SoftSkillEnum.ADAPTABILITY]: 'Adaptabilidade',\r\n    [SoftSkillEnum.ATTENTION_TO_DETAIL]: 'Atenção aos Detalhes',\r\n    [SoftSkillEnum.COLLABORATION]: 'Colaboração',\r\n    [SoftSkillEnum.COMMITMENT]: 'Comprometimento',\r\n    [SoftSkillEnum.COMMUNICATION]: 'Comunicação',\r\n    [SoftSkillEnum.CRITICAL_THINKING]: 'Pensamento Crítico',\r\n    [SoftSkillEnum.LEADERSHIP]: 'Liderança',\r\n    [SoftSkillEnum.PROBLEM_SOLVING]: 'Resolução de Problemas',\r\n    [SoftSkillEnum.RESILIENCE]: 'Resiliência',\r\n    [SoftSkillEnum.SELF_LEARNING]: 'Autoaprendizagem',\r\n    [SoftSkillEnum.TEAM_WORK]: 'Trabalho em Equipe',\r\n    [SoftSkillEnum.TIME_MANAGEMENT]: 'Gerenciamento de Tempo'\r\n};\r\n\r\nexport const SoftSkillsDictionary = <{ [id: string]: { [id: string]: string } }>{\r\n    [SystemLanguageEnum.EN_US]: english,\r\n    [SystemLanguageEnum.PT_BR]: portuguese\r\n};\r\n\r\n","import { SystemLanguageEnum } from '../models/enums/system-language.enum';\r\nimport { TitleEnum } from '../models/enums/title.enum';\r\n\r\nconst english = <{ [id: string]: string }> {\r\n    [TitleEnum.ABOUT_ME]: 'About me',\r\n    [TitleEnum.AGE]: 'Age',\r\n    [TitleEnum.CERTIFICATIONS]: 'Certifications',\r\n    [TitleEnum.DETAILS]: 'Details',\r\n    [TitleEnum.EDUCATION]: 'Education',\r\n    [TitleEnum.EMAIL]: 'Email',\r\n    [TitleEnum.LANGUAGES]: 'Languages',\r\n    [TitleEnum.LOCATION]: 'Location',\r\n    [TitleEnum.PHONE]: 'Phone',\r\n    [TitleEnum.SKILLS]: 'My Skills',\r\n    [TitleEnum.WORK_EXPERIENCE]: 'Work Experience'\r\n};\r\n\r\nconst portuguese = <{ [id: string]: string }> {\r\n    [TitleEnum.ABOUT_ME]: 'Sobre mim',\r\n    [TitleEnum.AGE]: 'Idade',\r\n    [TitleEnum.CERTIFICATIONS]: 'Certificações',\r\n    [TitleEnum.DETAILS]: 'Detalhes',\r\n    [TitleEnum.EDUCATION]: 'Formação',\r\n    [TitleEnum.EMAIL]: 'Email',\r\n    [TitleEnum.LANGUAGES]: 'Idiomas',\r\n    [TitleEnum.LOCATION]: 'Localização',\r\n    [TitleEnum.PHONE]: 'Telefone',\r\n    [TitleEnum.SKILLS]: 'Skills',\r\n    [TitleEnum.WORK_EXPERIENCE]: 'Experiência'\r\n};\r\n\r\nexport const TitleDictionary = <{ [id: string]: { [id: string]: string } }>{\r\n    [SystemLanguageEnum.EN_US]: english,\r\n    [SystemLanguageEnum.PT_BR]: portuguese\r\n};\r\n\r\n","import { LanguageEnum } from './enums/language.enum';\r\n\r\nexport class LanguageLevel {\r\n\r\n    private _language: LanguageEnum;\r\n    private _level: number;\r\n\r\n    constructor(language?: LanguageEnum, level?: number)\r\n    constructor(language: LanguageEnum, level: number) {\r\n        this._language = language;\r\n        this._level = level;\r\n    }\r\n\r\n    get language(): LanguageEnum {\r\n        return this._language;\r\n    }\r\n\r\n    set language(language: LanguageEnum) {\r\n        this._language = language;\r\n    }\r\n\r\n    get level(): number {\r\n        return this._level;\r\n    }\r\n\r\n    set level(level: number) {\r\n        this._level = level;\r\n    }\r\n\r\n}\r\n","import { SchoolEnum } from '../models/enums/school.enum';\r\nimport { SystemLanguageEnum } from '../models/enums/system-language.enum';\r\n\r\nconst websites = <{ [id: string]: string }> {\r\n    [SchoolEnum.SAPIENZA]: 'https://www.uniroma1.it/it/pagina-strutturale/home',\r\n    [SchoolEnum.UFSCAR]: 'https://www.sorocaba.ufscar.br'\r\n};\r\n\r\nexport const SchoolWebsiteDictionary = <{ [id: string]: { [id: string]: string } }>{\r\n    [SystemLanguageEnum.EN_US]: websites,\r\n    [SystemLanguageEnum.PT_BR]: websites\r\n};","import { PositionEnum } from \"./enums/position.enum\";\r\n\r\nexport class HeaderInfo {\r\n\r\n    private _name: string;\r\n    private _positions: PositionEnum[];\r\n    private _photoUrl: string;\r\n\r\n    constructor(name?: string, positions?: PositionEnum[], photoUrl?: string)\r\n    constructor(name: string, positions: PositionEnum[], photoUrl: string) {\r\n        this._name = name;\r\n        this._positions = positions;\r\n        this._photoUrl = photoUrl;\r\n\r\n    }\r\n\r\n    get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    set name(name: string) {\r\n        this._name = name;\r\n    }\r\n\r\n    get positions(): PositionEnum[] {\r\n        return this._positions;\r\n    }\r\n\r\n    set positions(positions: PositionEnum[]) {\r\n        this._positions = positions;\r\n    }\r\n\r\n    get photoUrl(): string {\r\n        return this._photoUrl;\r\n    }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { EducationItem } from 'src/app/models/education-item';\r\nimport { SystemLanguageEnum } from 'src/app/models/enums/system-language.enum';\r\nimport { TranslationTypeEnum } from 'src/app/models/enums/translation-type.enum';\r\nimport { TranslationService } from 'src/app/service/translation.service';\r\n\r\n@Component({\r\n  selector: 'ms-education-item',\r\n  templateUrl: './ms-education-item.component.html',\r\n  styleUrls: ['./ms-education-item.component.css']\r\n})\r\nexport class MsEducationItemComponent implements OnInit {\r\n\r\n  @Input() info: EducationItem = new EducationItem();\r\n  @Input() language: SystemLanguageEnum = SystemLanguageEnum.EN_US;\r\n\r\n  constructor(private translationService: TranslationService) { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  get schoolWebsite(): String {\r\n    return this.translationService.translate(this.language, TranslationTypeEnum.SCHOOL_WEBSITE, this.info.school);\r\n  }\r\n}\r\n","<div class=\"timeline-card-title\">\r\n    <div class=\"title\">\r\n        <span class=\"h5\">{{ info.degree | translate: 'MAJOR_DEGREE':language }}</span>\r\n    </div>\r\n    <div class=\"major\">\r\n        <span class=\"h6\">{{ info.major | majors: language }}</span>\r\n    </div>\r\n    <div class=\"school\">\r\n        <a href=\"{{schoolWebsite}}\" target=\"_blank\">{{ info.school | translate: 'SCHOOL':language }}</a>\r\n    </div>\r\n    <div class=\"period\">\r\n        <ms-btn-period [period]=\"info.period\"></ms-btn-period>\r\n    </div>\r\n</div>\r\n<div class=\"timeline-card-body\" *ngIf=\"info.additionalInfo\">\r\n    <div>\r\n        <p class=\"mb-2\"><strong>{{ info.additionalInfo.title }}</strong></p>\r\n        <p>{{ info.additionalInfo.info }}</p>\r\n    </div>\r\n</div>\r\n<div class=\"timeline-footer\">\r\n    <div class=\"row\">\r\n        <div class=\"ms-external-link col-5\" *ngIf=\"info.externalLink\">\r\n            <a [href]=\"info.externalLink.uri\" rel=\"external\" target=\"_blank\">\r\n                {{ info.externalLink.label }} <i class=\"fa fa-external-link text-info\"></i>\r\n            </a>\r\n        </div>\r\n\r\n        <div class=\"text-right\" [class.col-7]=\"info.externalLink\" [class.col-12]=\"!info.externalLink\" >\r\n            <span>{{ info.locale | translate: 'LOCALE':language }}</span><i class=\"fa fa-map-marker text-info\"></i>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { SkillLevelEnum } from 'src/app/models/enums/skill-level.enum';\r\nimport { SystemLanguageEnum } from 'src/app/models/enums/system-language.enum';\r\nimport { HardSkill } from 'src/app/models/hard-skill';\r\n\r\n@Component({\r\n  selector: 'ms-hard-skills-item',\r\n  templateUrl: './ms-hard-skills-item.component.html',\r\n  styleUrls: ['./ms-hard-skills-item.component.css']\r\n})\r\nexport class MsHardSkillsItemComponent implements OnInit {\r\n\r\n  @Input() skill: HardSkill = new HardSkill();\r\n  @Input() language: SystemLanguageEnum = SystemLanguageEnum.EN_US;\r\n\r\n  public levelClasses: string[] = new Array<string>(SkillLevelEnum.MAX);\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.populateLevelClasses();    \r\n  }\r\n\r\n  /**\r\n   * Populate the classes to be used for the given level\r\n   * \r\n   */\r\n  private populateLevelClasses(): void {\r\n    \r\n    let FULL_STAR_CLASS = 'fa-star';\r\n    let EMPTY_STAR_CLASS = 'fa-star-o';\r\n    let HALF_STAR_CLASS = 'fa-star-half-o';\r\n\r\n    for (let i = 1; i <= SkillLevelEnum.MAX; i++) {\r\n      if (this.skill.level >= i) {\r\n        this.levelClasses[i - 1] = FULL_STAR_CLASS;\r\n      } else if (this.skill.level < i && this.skill.level > i - 1) {\r\n        this.levelClasses[i - 1] = HALF_STAR_CLASS;\r\n      } else {\r\n        this.levelClasses[i - 1] = EMPTY_STAR_CLASS;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"row ms-skill\">\r\n    <p class=\"col-7\">{{ skill.skill | translate: 'HARD_SKILL':language }}</p>\r\n    <div class=\"col-5 ms-level\">\r\n        <span *ngFor=\"let class of levelClasses\" class=\"fa\" [ngClass]=\"class\"></span>\r\n    </div>\r\n</div>","import { SystemLanguageEnum } from '../models/enums/system-language.enum';\r\nimport { MajorEnum } from '../models/enums/major.enum';\r\n\r\nconst english = <{ [id: string]: string }> {\r\n    [MajorEnum.BUSINESS_INTELLIGENCE]: 'Business Intelligence',\r\n    [MajorEnum.COMPUTER_SCIENCE]: 'Computer Science'\r\n};\r\n\r\nconst portuguese = <{ [id: string]: string }> {\r\n    [MajorEnum.BUSINESS_INTELLIGENCE]: 'Business Intelligence',\r\n    [MajorEnum.COMPUTER_SCIENCE]: 'Ciência da Computação'\r\n};\r\n\r\nexport const MajorDictionary = <{ [id: string]: { [id: string]: string } }>{\r\n    [SystemLanguageEnum.EN_US]: english,\r\n    [SystemLanguageEnum.PT_BR]: portuguese\r\n};\r\n\r\n","import { SystemLanguageEnum } from '../models/enums/system-language.enum';\r\n\r\nconst languages = <{ [id: string]: string }> {\r\n    [SystemLanguageEnum.EN_US]: 'English',\r\n    [SystemLanguageEnum.PT_BR]: 'Português'\r\n};\r\n\r\nexport const SystemLanguageDictionary = <{ [id: string]: { [id: string]: string } }>{\r\n    [SystemLanguageEnum.EN_US]: languages,\r\n    [SystemLanguageEnum.PT_BR]: languages\r\n};\r\n\r\n","import { MenuItemEnum } from './enums/menu-item.enum';\r\n\r\nexport class MenuItem {\r\n\r\n    private _name: MenuItemEnum;\r\n    private _target: string;\r\n\r\n    constructor(name?: MenuItemEnum, target?: string)\r\n    constructor(name: MenuItemEnum, target: string) {\r\n        this._name = name;\r\n        this._target = target;\r\n    }\r\n\r\n    get name(): MenuItemEnum {\r\n        return this._name;\r\n    }\r\n\r\n    set name(name: MenuItemEnum) {\r\n        this._name = name;\r\n    }\r\n\r\n    get target(): string {\r\n        return this._target;\r\n    }\r\n\r\n    set target(target: string) {\r\n        this._target = target;\r\n    }\r\n\r\n}\r\n","export enum MajorDegreeEnum {\r\n\r\n    BACHELOR,\r\n    MASTER,\r\n    ACADEMIC_EXCHANGE\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ResumeInfoEnum } from 'src/app/models/enums/resume-info.enum';\r\nimport { SystemLanguageEnum } from 'src/app/models/enums/system-language.enum';\r\nimport { HeaderInfo } from 'src/app/models/header-info';\r\n\r\n@Component({\r\n  selector: 'ms-header-body',\r\n  templateUrl: './ms-header-body.component.html',\r\n  styleUrls: ['./ms-header-body.component.css']\r\n})\r\nexport class MsHeaderBodyComponent implements OnInit {\r\n\r\n  @Input() info: HeaderInfo = new HeaderInfo();\r\n  @Input() language: SystemLanguageEnum = SystemLanguageEnum.EN_US;\r\n\r\n  public resumeDownloadInfo: ResumeInfoEnum = ResumeInfoEnum.FILE_NAME_SUFFIX;\r\n  public resumeURI: ResumeInfoEnum = ResumeInfoEnum.URI;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n}\r\n","<div class=\"profile-page\">\r\n  <div class=\"wrapper\">\r\n    <div class=\"page-header page-header-small\" filter-color=\"blue\">\r\n      <div class=\"page-header-image\" data-parallax=\"true\"\r\n        style=\"background-image: url('assets/images/header_background.jpg');\">\r\n      </div>\r\n      <div class=\"container\">\r\n        <div class=\"content-center\">\r\n          <div class=\"ms-personal-photo\"><img [src]=\"info.photoUrl\" alt=\"me\" /></div>\r\n          <div class=\"h2 title\">{{ info.name }}</div>\r\n          <p class=\"category text-white\">{{ info.positions | positions: language }}</p>\r\n          <ms-btn-linkedin [position]=\"'bottom'\" [language]=\"language\"></ms-btn-linkedin>\r\n        </div>\r\n      </div>\r\n      <div class=\"section pb-0\">\r\n        <div class=\"container\">\r\n          <div class=\"button-container\">\r\n            <a class=\"btn btn-info btn-round\" href=\"{{ resumeURI | translate: 'RESUME_INFO':language }}\"\r\n              download=\"{{ resumeDownloadInfo | translate: 'RESUME_INFO':language }}\">Download CV</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { SystemLanguageEnum } from '../models/enums/system-language.enum';\r\nimport { MenuItemEnum } from '../models/enums/menu-item.enum';\r\n\r\nconst english = <{ [id: string]: string }> {\r\n    [MenuItemEnum.ABOUT_ME]: 'About me',\r\n    [MenuItemEnum.CERTIFICATION]: 'Certifications',\r\n    [MenuItemEnum.EDUCATION]: 'Education',\r\n    [MenuItemEnum.SKILLS]: 'Skills',\r\n    [MenuItemEnum.WORK_EXPERIENCE]: 'Experience'\r\n};\r\n\r\nconst portuguese = <{ [id: string]: string }> {\r\n    [MenuItemEnum.ABOUT_ME]: 'Sobre',\r\n    [MenuItemEnum.CERTIFICATION]: 'Certificações',\r\n    [MenuItemEnum.EDUCATION]: 'Formação',\r\n    [MenuItemEnum.SKILLS]: 'Skills',\r\n    [MenuItemEnum.WORK_EXPERIENCE]: 'Experiência'\r\n};\r\n\r\nexport const MenuItemDictionary = <{ [id: string]: { [id: string]: string } }>{\r\n    [SystemLanguageEnum.EN_US]: english,\r\n    [SystemLanguageEnum.PT_BR]: portuguese\r\n};\r\n\r\n","import { ActivityItem } from '../models/activity-item';\r\nimport { ActivityTypeEnum } from '../models/enums/activity-type.enum';\r\nimport { SystemLanguageEnum } from '../models/enums/system-language.enum';\r\nimport { WorkExperienceEnum } from '../models/enums/work-experience.enum';\r\n\r\n\r\nconst english = <{ [id: string]: ActivityItem[] }>{\r\n    [WorkExperienceEnum.UBER_SOFTWARE_ENGINEER]: [\r\n        new ActivityItem(ActivityTypeEnum.ARCHITECTURE, `Design and architecture of solutions, through elaboration of RFCs`),\r\n        new ActivityItem(ActivityTypeEnum.SUPPORT, `Leadership of initiatives end-to-end, which requires collaboration and coordination with multiple LoBs and stakeholders from multiple seniority and multiple platforms (Androi, iOS, Web, etc)`),\r\n        new ActivityItem(ActivityTypeEnum.CODING, `Development of Backend codebase in languages like GoLang, C++ and Lua`),\r\n        new ActivityItem(ActivityTypeEnum.CODING, `Code review from projects that I am directly involved and also the ones that I am not`),\r\n        new ActivityItem(ActivityTypeEnum.SUPPORT, `Mentoring of other engineers`),\r\n    ],\r\n    [WorkExperienceEnum.OPUS_SENIOR_TECH_LEAD]: [\r\n        new ActivityItem(ActivityTypeEnum.CODING, \"Development of one of the company's first own products in many years, which is a Open Banking solution, following all of Brazil's Central Bank regulations and specifications, to be offered to banks and financial institutions, be it on the client's cloud infraestructure or as SaaS\"),\r\n        new ActivityItem(ActivityTypeEnum.CODING, \"Evolution of a bank loan application into a white label platform which allowed the client to offer the platform to key partners with minimal effort and profit from the loans provided by the partners\"),\r\n        new ActivityItem(ActivityTypeEnum.CODING, \"Study and initiation of the use of AWS Batch for batch processing\"),\r\n        new ActivityItem(ActivityTypeEnum.SUPPORT, \"Recording of a training on how the white label platform works, in both technical and user's experience levels, to facilitate the onboarding of new members to the team. Before that, a member of the team had to give the same training over and over again every time a new person would come along\")\r\n    ],\r\n    [WorkExperienceEnum.OPUS_INTERMEDIATE_DEVELOPER]: [\r\n        new ActivityItem(ActivityTypeEnum.CODING, \"Development of an Open API architecture and responsive web app that provide bank loans for individuals, which soon achieved the mark of R$1M in loans granted and allowed the client to close several loan dedicated branches reducing their expenses\"),\r\n        new ActivityItem(ActivityTypeEnum.CODING, \"Remodeling of the database and API structure of the main Brazilian FoodTech company, creating a well-defined ETL process and increasing their code-efficiency by 10x\"),\r\n        new ActivityItem(ActivityTypeEnum.CODING, \"Development of a platform that allows individuals and companies to join consortiums of real estate, vehicles and/or services\")\r\n    ],\r\n    [WorkExperienceEnum.AUDAXWARE]: [\r\n        new ActivityItem(ActivityTypeEnum.CODING, \"Rewrite of the legacy system by using the technologies above mentioned and improvement of it after it was released, which not only improved the user experience, but also the code efficiency, allowing the onboarding of two new big companies to the software\"),\r\n        new ActivityItem(ActivityTypeEnum.DATABASE, \"Data migration from PostgreSQL to SQL Server\"),\r\n        new ActivityItem(ActivityTypeEnum.CODING, \"Support to the old system until the new one was ready to be released and the data migration was done\"),\r\n        new ActivityItem(ActivityTypeEnum.SUPPORT, \"Support to clients on how to use the system\"),\r\n    ],\r\n    [WorkExperienceEnum.OPUS_JR_SYSTEM_ANALYST]: [\r\n        new ActivityItem(ActivityTypeEnum.CODING, \"Development of an online learning responsive web app for an English school\"),\r\n        new ActivityItem(ActivityTypeEnum.CODING, \"Development of a repository containing front-end components to be used internally on new projects. The idea here was to have something like a internal bootstrap to optimize developers' time when initiating new projects\")\r\n    ]\r\n};\r\n\r\nconst portuguese = <{ [id: string]: ActivityItem[] }>{\r\n    [WorkExperienceEnum.UBER_SOFTWARE_ENGINEER]: [\r\n        new ActivityItem(ActivityTypeEnum.ARCHITECTURE, `Design e elaboração da arquitetura de soluçoes, através da escrita de RFCs`),\r\n        new ActivityItem(ActivityTypeEnum.SUPPORT, `Liderança de iniciativas do início ao fim, o que inclue colaborção e cordenação com diversos times e stakeholders de múltiplas senioridades e plataformas (android, iOS, Web e etc)`),\r\n        new ActivityItem(ActivityTypeEnum.CODING, `Desenvolvimento da parte Backend de soluções em linguagens como GoLang, C++ e Lua`),\r\n        new ActivityItem(ActivityTypeEnum.CODING, `Revisão de código não somente de projetos que estou envolvida mas da Org como um todo`),\r\n        new ActivityItem(ActivityTypeEnum.SUPPORT, `Mentoria de outros engenheiros`),\r\n    ],\r\n    [WorkExperienceEnum.OPUS_SENIOR_TECH_LEAD]: [\r\n        new ActivityItem(ActivityTypeEnum.CODING, \"Criação de uma solução pronta de Open Banking, conforme resoluções e especificações do Banco Central, como um produto próprio da empresa a ser oferecido para bancos e instuições financeiras\"),\r\n        new ActivityItem(ActivityTypeEnum.CODING, \"Evolução de uma plataforma de empréstimo bancário para transformá-la em white label, permitindo que o nosso cliente possa oferecer a plataforma para parceiros chave com mínimo esforço e obter lucro a partir disso\"),\r\n        new ActivityItem(ActivityTypeEnum.CODING, \"Estudo e implementação do uso do AWS Batch para processamentos em lote\"),\r\n        new ActivityItem(ActivityTypeEnum.SUPPORT, \"Gravação de um treinamento sobre a plataforma white label, tanto em nível técnico quanto de experiência do usuário. Antes disso, membros do time precisavam dar esse mesmo treinamento toda vez que algum colaborador novo se juntava ao time\")\r\n    ],\r\n    [WorkExperienceEnum.OPUS_INTERMEDIATE_DEVELOPER]: [\r\n        new ActivityItem(ActivityTypeEnum.CODING, \"Desenvolvimento de uma Open API e plataforma web responsiva que fornecem empréstimo bancários para indivíduos, a qual rapidamente atingiu a marca de R$1M em empréstimos e permitiu ao nosso cliente realizar o fechamento de diversas lojas físicas, diminuindo custos\"),\r\n        new ActivityItem(ActivityTypeEnum.CODING, \"Remodelagem da base de dados e API da principal FoodTech brasileira, o que resultou na criação de um processo de ETL bem definido e aumento de performance da API na grandeza de 10x\"),\r\n        new ActivityItem(ActivityTypeEnum.CODING, \"Desenvolvimento de uma plataforma web para consórcio de imóveis, automóveis e/ou serviços\")\r\n    ],\r\n    [WorkExperienceEnum.AUDAXWARE]: [\r\n        new ActivityItem(ActivityTypeEnum.CODING, \"Reescrita do sistema legado usando as tecnologias acima mencionadas e evolução do sistema após finalizado. Essa mudança não somente melhorou a experiência do usuário mas também a eficiência do código, o que permitiu a aquisição de duas novas grandes empresas como clientes\"),\r\n        new ActivityItem(ActivityTypeEnum.DATABASE, \"Migração dos dados de PostgreSQL para SQL Server\"),\r\n        new ActivityItem(ActivityTypeEnum.CODING, \"Suporte ao sistema legado até que o novo estivesse pronto e a migração de dados realizada\"),\r\n        new ActivityItem(ActivityTypeEnum.SUPPORT, \"Suporte aos clientes em como utilizar o novo sistema\"),\r\n    ],\r\n    [WorkExperienceEnum.OPUS_JR_SYSTEM_ANALYST]: [\r\n        new ActivityItem(ActivityTypeEnum.CODING, \"Desenvolvimento de uma plataforma web responsiva de aprendizado online para uma escola de inglês\"),\r\n        new ActivityItem(ActivityTypeEnum.CODING, \"Desenvolvimento de um repositório de componentes front-end a ser utilizado internamente em novos projetos. A ideia era ter uma espécie de bootstrap interna, com a identidade da empresa, para otimizar o tempo dos desenvolvedores quando iniciando novos projetos\")\r\n    ]\r\n};\r\n\r\nexport const WorkExperienceActivitiesDictionary = <{ [id: string]: { [id: string]: ActivityItem[] } }>{\r\n    [SystemLanguageEnum.EN_US]: english,\r\n    [SystemLanguageEnum.PT_BR]: portuguese\r\n};","import { CompanyEnum } from './enums/company.enum';\r\nimport { PositionEnum } from './enums/position.enum';\r\nimport { WorkExperienceTechnologyEnum } from './enums/work-experience-technology.enum';\r\nimport { WorkExperienceEnum } from './enums/work-experience.enum';\r\nimport { Period } from './period';\r\n\r\nexport class WorkExperience {\r\n\r\n    private _identifier: WorkExperienceEnum;\r\n    private _positions: PositionEnum[];\r\n    private _company: CompanyEnum;\r\n    private _period: Period;\r\n    private _technologies: WorkExperienceTechnologyEnum[];\r\n    \r\n    \r\n    constructor(identifier?: WorkExperienceEnum, positions?: PositionEnum[], company?: CompanyEnum, period?: Period, technologies?: WorkExperienceTechnologyEnum[])\r\n    constructor(identifier: WorkExperienceEnum, positions: PositionEnum[], company: CompanyEnum, period: Period, technologies: WorkExperienceTechnologyEnum[]) {\r\n        this._identifier = identifier;\r\n        this._positions = positions;\r\n        this._company = company;\r\n        this._period = period;\r\n        this._technologies = technologies;\r\n    }\r\n\r\n    get identifier(): WorkExperienceEnum {\r\n        return this._identifier;\r\n    }\r\n\r\n    set identifier(identifier: WorkExperienceEnum) {\r\n        this._identifier = identifier;\r\n    }\r\n\r\n    get positions(): PositionEnum[] {\r\n        return this._positions;\r\n    }\r\n\r\n    set positions(positions: PositionEnum[]) {\r\n        this._positions = positions;\r\n    }\r\n\r\n    get company(): CompanyEnum {\r\n        return this._company;\r\n    }\r\n\r\n    set company(company: CompanyEnum) {\r\n        this._company = company;\r\n    }\r\n\r\n    get period(): Period {\r\n        return this._period;\r\n    }\r\n\r\n    set period(period: Period) {\r\n        this._period = period;\r\n    }\r\n\r\n    get technologies(): WorkExperienceTechnologyEnum[] {\r\n       return this._technologies;\r\n    }\r\n\r\n    set technologies(technologies: WorkExperienceTechnologyEnum[]) {\r\n        this._technologies = technologies;\r\n    }\r\n}\r\n","import { SoftSkillEnum } from './enums/soft-skill.enum';\r\nimport { HardSkill } from './hard-skill';\r\n\r\nexport class Skills {\r\n\r\n    private _hardSkills: HardSkill[];\r\n    private _softSkills: SoftSkillEnum[];\r\n\r\n    constructor(hardSkills?: HardSkill[], softSkills?: SoftSkillEnum[])\r\n    constructor(hardSkills: HardSkill[], softSkills: SoftSkillEnum[]) {\r\n        this._hardSkills = hardSkills;\r\n        this._softSkills = softSkills;\r\n    }\r\n\r\n    get hardSkills(): HardSkill[] {\r\n        return this._hardSkills;\r\n    }\r\n\r\n    set hardSkills(hardSkills: HardSkill[]) {\r\n        this._hardSkills = hardSkills;\r\n    }\r\n\r\n    get softSkills(): SoftSkillEnum[] {\r\n        return this._softSkills;\r\n    }\r\n\r\n    set softSkills(softSkills: SoftSkillEnum[]) {\r\n        this._softSkills = softSkills;\r\n    }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { SystemLanguageEnum } from 'src/app/models/enums/system-language.enum';\r\nimport { TitleEnum } from 'src/app/models/enums/title.enum';\r\nimport { Skills } from 'src/app/models/skills';\r\n\r\n@Component({\r\n  selector: 'ms-skills',\r\n  templateUrl: './ms-skills.component.html',\r\n  styleUrls: ['./ms-skills.component.css']\r\n})\r\nexport class MsSkillsComponent implements OnInit {\r\n\r\n  @Input() skills: Skills = new Skills();\r\n  @Input() language: SystemLanguageEnum = SystemLanguageEnum.EN_US;\r\n\r\n  public title: TitleEnum = TitleEnum.SKILLS;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"h4 text-center mb-4 title\">{{ title | translate: 'TITLE':language }}</div>\r\n<div class=\"row justify-content-between ms-skills\">\r\n    <div class=\"card col-lg-9 col-md-12 ms-hard-skills\">\r\n        <div class=\"card-body\">\r\n            <div class=\"h5 mt-0 title\">Hard Skills</div>\r\n            <div>\r\n                <ms-hard-skills [skills]=\"skills.hardSkills\" [language]=\"language\"></ms-hard-skills>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"card col-lg-3 col-md-12 ms-soft-skills\">\r\n        <div class=\"card-body\">\r\n            <div class=\"h5 mt-0 title\">Soft Skills</div>\r\n            <div>\r\n                <ms-soft-skills [skills]=\"skills.softSkills\" [language]=\"language\"></ms-soft-skills>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { SystemLanguageEnum } from 'src/app/models/enums/system-language.enum';\r\nimport { TitleEnum } from 'src/app/models/enums/title.enum';\r\nimport { WorkExperience } from 'src/app/models/work-experience';\r\n\r\n@Component({\r\n  selector: 'ms-work-experience',\r\n  templateUrl: './ms-work-experience.component.html',\r\n  styleUrls: ['./ms-work-experience.component.css']\r\n})\r\nexport class MsWorkExperienceComponent implements OnInit {\r\n\r\n  @Input() experiences: WorkExperience[] = [];\r\n  @Input() language: SystemLanguageEnum = SystemLanguageEnum.EN_US;\r\n\r\n  public title: TitleEnum = TitleEnum.WORK_EXPERIENCE;\r\n  \r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  /**\r\n   * Indicates if should be an inverted card or not\r\n   * \r\n   * @param index \r\n   */\r\n  public isInvertedCard(index: number): boolean {\r\n    return (index % 2) > 0;\r\n  }\r\n}\r\n","<div class=\"h4 text-center mb-4 title\">{{title | translate: 'TITLE':language}}</div>\r\n<ul class=\"timeline\">\r\n  <li *ngFor=\"let experience of experiences; index as i\" [class.timeline-inverted]=\"isInvertedCard(i)\" >\r\n    <div class=\"timeline-badge\"><a><i class=\"fa fa-dot-circle-o\"></i></a></div>\r\n    <div class=\"timeline-card\">\r\n      <ms-work-experience-item [info]=\"experience\" [language]=\"language\"></ms-work-experience-item>\r\n    </div>\r\n  </li>\r\n\r\n  <li class=\"clearfix\" style=\"float: none;\"></li>\r\n</ul>","import { SystemLanguageEnum } from '../models/enums/system-language.enum';\r\nimport { SchoolEnum } from '../models/enums/school.enum';\r\nimport { ThesisInfoEnum } from '../models/enums/thesis-info.enum';\r\n\r\nconst english = <{ [id: string]: string }> {\r\n    [ThesisInfoEnum.LINK_LABEL]: 'Thesis (pt-br)',\r\n    [ThesisInfoEnum.TITLE_LABEL]: 'Thesis title',\r\n    [ThesisInfoEnum.THESIS_TITLE]: 'Take your time but do not wait too long: Decision-making by user demand using web data'\r\n};\r\n\r\nconst portuguese = <{ [id: string]: string }> {\r\n    [ThesisInfoEnum.LINK_LABEL]: 'Dissertação',\r\n    [ThesisInfoEnum.TITLE_LABEL]: 'Título da dissertação',\r\n    [ThesisInfoEnum.THESIS_TITLE]: 'Faça no seu ritmo mas não perca a hora: tomada de decisão sob demandado usuário utilizando dados da Web'\r\n};\r\n\r\nexport const ThesisInfoDictionary = <{ [id: string]: { [id: string]: string } }>{\r\n    [SystemLanguageEnum.EN_US]: english,\r\n    [SystemLanguageEnum.PT_BR]: portuguese\r\n};\r\n\r\n","export enum CompanyEnum {\r\n\r\n    OPUS = \"OPUS Software Ltda.\",\r\n    AUDAXWARE = \"Audaxware LLC\",\r\n    UBER = \"Uber Technologies Inc.\"\r\n\r\n}\r\n","export enum SchoolEnum {\r\n\r\n    UFSCAR,\r\n    SAPIENZA\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { MonthYear } from '../models/month-year';\r\n\r\n@Pipe({\r\n  name: 'date'\r\n})\r\nexport class DatePipe implements PipeTransform {\r\n\r\n  constructor() {}\r\n\r\n  transform(date: MonthYear, format: string): any {\r\n    \r\n    if (!date || !format) {\r\n      return date;\r\n    }\r\n\r\n    let formatter = new Intl.DateTimeFormat(format, {\r\n      year: 'numeric',\r\n      month: \"short\"\r\n    });\r\n    \r\n    // The replace it's necessary due to the default pt-BR format\r\n    return formatter.format(new Date(date.year, date.month)).replace('. de', '');\r\n\r\n  }\r\n\r\n}\r\n","export enum LanguageEnum {\r\n\r\n    PORTUGUESE,\r\n    ENGLISH,\r\n    ITALIAN,\r\n    SPANISH,\r\n    FRENCH\r\n\r\n}\r\n","export class EducationAdditionalInfo {\r\n\r\n    private _title: string;\r\n    private _info: string;\r\n\r\n    constructor(title?: string, info?: string)\r\n    constructor(title: string, info: string) {\r\n        this._title = title;\r\n        this._info = info;\r\n    }\r\n\r\n    get title(): string {\r\n        return this._title;\r\n    }\r\n\r\n    set title(title: string) {\r\n        this._title = title;\r\n    }\r\n\r\n    get info(): string {\r\n        return this._info;\r\n    }\r\n\r\n    set info(info: string) {\r\n        this._info = info;\r\n    }\r\n\r\n}\r\n","import { ResumeInfoEnum } from \"../models/enums/resume-info.enum\";\r\nimport { SystemLanguageEnum } from \"../models/enums/system-language.enum\";\r\n\r\nconst english = <{ [id: string]: string }> {\r\n    [ResumeInfoEnum.FILE_NAME_SUFFIX]: 'Resume',\r\n    [ResumeInfoEnum.URI]: 'https://drive.google.com/uc?export=download&id=15Jvl7DESK0ieoPxH-vCqz-NcAHK-eU9J'\r\n};\r\n\r\nconst portuguese = <{ [id: string]: string }> {\r\n    [ResumeInfoEnum.FILE_NAME_SUFFIX]: 'Curriculo',\r\n    [ResumeInfoEnum.URI]: 'https://drive.google.com/uc?export=download&id=1seTtbjV6C10fe9duf4ll8eoRe42ij0yT'\r\n};\r\n\r\nexport const ResumeInfoDictionary = <{ [id: string]: { [id: string]: string } }>{\r\n    [SystemLanguageEnum.EN_US]: english,\r\n    [SystemLanguageEnum.PT_BR]: portuguese\r\n};","import { Injectable } from '@angular/core';\r\nimport { AboutMe } from '../models/about-me';\r\nimport { AboutMeDetailItem } from '../models/about-me-detail-item';\r\nimport { Certification } from '../models/certification';\r\nimport { EducationAdditionalInfo } from '../models/education-additional-info';\r\nimport { EducationItem } from '../models/education-item';\r\nimport { AboutMeInfoEnum } from '../models/enums/about-me-info.enum';\r\nimport { CompanyEnum } from '../models/enums/company.enum';\r\nimport { HardSkillEnum } from '../models/enums/hard-skill.enum';\r\nimport { LanguageEnum } from '../models/enums/language.enum';\r\nimport { LocaleEnum } from '../models/enums/locale.enum';\r\nimport { MajorDegreeEnum } from '../models/enums/major-degree.enum';\r\nimport { MajorEnum } from '../models/enums/major.enum';\r\nimport { MonthEnum } from '../models/enums/month.enum';\r\nimport { PositionEnum } from '../models/enums/position.enum';\r\nimport { SchoolEnum } from '../models/enums/school.enum';\r\nimport { SkillLevelEnum } from '../models/enums/skill-level.enum';\r\nimport { SoftSkillEnum } from '../models/enums/soft-skill.enum';\r\nimport { ThesisInfoEnum } from '../models/enums/thesis-info.enum';\r\nimport { TitleEnum } from '../models/enums/title.enum';\r\nimport { TranslationTypeEnum } from '../models/enums/translation-type.enum';\r\nimport { WorkExperienceTechnologyEnum } from '../models/enums/work-experience-technology.enum';\r\nimport { WorkExperienceEnum } from '../models/enums/work-experience.enum';\r\nimport { ExternalLink } from '../models/external-link';\r\nimport { HardSkill } from '../models/hard-skill';\r\nimport { LanguageLevel } from '../models/language-level';\r\nimport { MonthYear } from '../models/month-year';\r\nimport { Period } from '../models/period';\r\nimport { Resume } from '../models/resume';\r\nimport { Skills } from '../models/skills';\r\nimport { WorkExperience } from '../models/work-experience';\r\nimport { SystemLanguageService } from './system-language.service';\r\nimport { TranslationService } from './translation.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ResumeService {\r\n\r\n  constructor(private translationService: TranslationService,\r\n    private systemLanguageService: SystemLanguageService) { }\r\n\r\n  public get(): Resume {\r\n    return new Resume(this.aboutMe, this.workExperiences, this.education, this.certifications, this.skills);\r\n  }\r\n\r\n  private get aboutMe(): AboutMe {\r\n    return new AboutMe(\r\n      [\r\n        new AboutMeDetailItem(TitleEnum.AGE, AboutMeInfoEnum.AGE),\r\n        new AboutMeDetailItem(TitleEnum.EMAIL, AboutMeInfoEnum.EMAIL),\r\n        new AboutMeDetailItem(TitleEnum.PHONE, AboutMeInfoEnum.PHONE),\r\n        new AboutMeDetailItem(TitleEnum.LOCATION, AboutMeInfoEnum.LOCATION)\r\n      ],\r\n      [\r\n        new LanguageLevel(LanguageEnum.ENGLISH, 90), new LanguageLevel(LanguageEnum.PORTUGUESE, 100),\r\n        new LanguageLevel(LanguageEnum.ITALIAN, 60)\r\n      ]\r\n    );\r\n  }\r\n\r\n  private get workExperiences(): WorkExperience[] {\r\n    return [\r\n      (new WorkExperience(WorkExperienceEnum.UBER_SOFTWARE_ENGINEER, \r\n        [PositionEnum.SOFTWARE_ENGINEER], CompanyEnum.UBER, new Period(new MonthYear(MonthEnum.JUL, 2021)), [\r\n        WorkExperienceTechnologyEnum.OAUTH20, WorkExperienceTechnologyEnum.GO, WorkExperienceTechnologyEnum.KANBAN, WorkExperienceTechnologyEnum.CASSANDRA, \r\n        WorkExperienceTechnologyEnum.KIBANA, WorkExperienceTechnologyEnum.PHABRICATOR, WorkExperienceTechnologyEnum.CPLUS2, WorkExperienceTechnologyEnum.M3, \r\n        WorkExperienceTechnologyEnum.GIT, WorkExperienceTechnologyEnum.LUA, WorkExperienceTechnologyEnum.ARCANIST, WorkExperienceTechnologyEnum.GRAFANA,\r\n        WorkExperienceTechnologyEnum.SCRUM, WorkExperienceTechnologyEnum.CICD    \r\n      ])),\r\n      (new WorkExperience(WorkExperienceEnum.OPUS_SENIOR_TECH_LEAD, [PositionEnum.SENIOR_SOFTWARE_DEVELOPER, PositionEnum.TECH_LEAD], CompanyEnum.OPUS,\r\n        new Period(new MonthYear(MonthEnum.NOV, 2019), new MonthYear(MonthEnum.JUL, 2021)), [\r\n        WorkExperienceTechnologyEnum.JAVA_11, WorkExperienceTechnologyEnum.SPRING_BOOT, WorkExperienceTechnologyEnum.ANGULAR_6, WorkExperienceTechnologyEnum.POSTGRESQL,\r\n        WorkExperienceTechnologyEnum.AWS, WorkExperienceTechnologyEnum.GIT, WorkExperienceTechnologyEnum.JIRA, WorkExperienceTechnologyEnum.SCRUM,\r\n        WorkExperienceTechnologyEnum.JENKINS, WorkExperienceTechnologyEnum.SONAR_QUBE\r\n      ])),\r\n      (new WorkExperience(WorkExperienceEnum.OPUS_INTERMEDIATE_DEVELOPER, [PositionEnum.INTERMEDIATE_SOFTWARE_DEVELOPER], CompanyEnum.OPUS,\r\n        new Period(new MonthYear(MonthEnum.NOV, 2017), new MonthYear(MonthEnum.NOV, 2019)), [\r\n        WorkExperienceTechnologyEnum.JAVA_8, WorkExperienceTechnologyEnum.SPRING_BOOT, WorkExperienceTechnologyEnum.ANGULAR_2, WorkExperienceTechnologyEnum.MY_SQL,\r\n        WorkExperienceTechnologyEnum.AWS, WorkExperienceTechnologyEnum.GIT, WorkExperienceTechnologyEnum.JIRA, WorkExperienceTechnologyEnum.SCRUM,\r\n        WorkExperienceTechnologyEnum.JENKINS, WorkExperienceTechnologyEnum.SONAR_QUBE\r\n      ])),\r\n      (new WorkExperience(WorkExperienceEnum.AUDAXWARE, [PositionEnum.WEB_DEVELOPER], CompanyEnum.AUDAXWARE,\r\n        new Period(new MonthYear(MonthEnum.NOV, 2015), new MonthYear(MonthEnum.APR, 2020)), [\r\n        WorkExperienceTechnologyEnum.C_SHARP, WorkExperienceTechnologyEnum.SQL_SERVER, WorkExperienceTechnologyEnum.ANGULAR_JS, WorkExperienceTechnologyEnum.KENDO_UI,\r\n        WorkExperienceTechnologyEnum.MATERIAL, WorkExperienceTechnologyEnum.AZURE, WorkExperienceTechnologyEnum.WEB_JOB, WorkExperienceTechnologyEnum.TFS,\r\n        WorkExperienceTechnologyEnum.KANBAN\r\n      ])),\r\n      (new WorkExperience(WorkExperienceEnum.OPUS_JR_SYSTEM_ANALYST, [PositionEnum.SYSTEM_ANALYST], CompanyEnum.OPUS,\r\n        new Period(new MonthYear(MonthEnum.JAN, 2015), new MonthYear(MonthEnum.NOV, 2015)), [\r\n        WorkExperienceTechnologyEnum.C_SHARP, WorkExperienceTechnologyEnum.SQL_SERVER, WorkExperienceTechnologyEnum.ANGULAR_JS,\r\n        WorkExperienceTechnologyEnum.KNOCKOUT, WorkExperienceTechnologyEnum.BOOTSTRAP, WorkExperienceTechnologyEnum.SCRUM\r\n      ])),\r\n    ];\r\n  }\r\n\r\n  private get education(): EducationItem[] {\r\n    return [\r\n      new EducationItem(SchoolEnum.UFSCAR, MajorDegreeEnum.MASTER, [MajorEnum.COMPUTER_SCIENCE, MajorEnum.BUSINESS_INTELLIGENCE],\r\n        new Period(new MonthYear(MonthEnum.AUG, 2015), new MonthYear(MonthEnum.AUG, 2017)), LocaleEnum.SOROCABA,\r\n        new ExternalLink('https://repositorio.ufscar.br/handle/ufscar/9154', this.translationService.translate(this.systemLanguageService.language, TranslationTypeEnum.THESIS_INFO, ThesisInfoEnum.LINK_LABEL)),\r\n        new EducationAdditionalInfo(\r\n          this.translationService.translate(this.systemLanguageService.language, TranslationTypeEnum.THESIS_INFO, ThesisInfoEnum.TITLE_LABEL),\r\n          this.translationService.translate(this.systemLanguageService.language, TranslationTypeEnum.THESIS_INFO, ThesisInfoEnum.THESIS_TITLE)\r\n        )\r\n      ),\r\n      new EducationItem(SchoolEnum.UFSCAR, MajorDegreeEnum.BACHELOR, [MajorEnum.COMPUTER_SCIENCE],\r\n        new Period(new MonthYear(MonthEnum.FEB, 2011), new MonthYear(MonthEnum.JUL, 2015)), LocaleEnum.SOROCABA),\r\n      new EducationItem(SchoolEnum.SAPIENZA, MajorDegreeEnum.ACADEMIC_EXCHANGE, [MajorEnum.COMPUTER_SCIENCE],\r\n        new Period(new MonthYear(MonthEnum.AUG, 2013), new MonthYear(MonthEnum.AUG, 2014)), LocaleEnum.ROME)\r\n    ];\r\n  }\r\n\r\n  private get certifications(): Certification[] {\r\n    return [\r\n      new Certification('IELTS General Training Overall Band Scores 8', 'IELTS', new MonthYear(MonthEnum.FEB, 2022)),\r\n      new Certification('MCSA: SQL 2016 Database Development', 'MCSA', new MonthYear(MonthEnum.OCT, 2018))\r\n    ];\r\n  }\r\n\r\n  private get softSkills(): SoftSkillEnum[] {\r\n    return [\r\n      SoftSkillEnum.TEAM_WORK, SoftSkillEnum.COLLABORATION, SoftSkillEnum.COMMITMENT,\r\n      SoftSkillEnum.CRITICAL_THINKING, SoftSkillEnum.SELF_LEARNING, SoftSkillEnum.ADAPTABILITY,\r\n      SoftSkillEnum.COMMUNICATION, SoftSkillEnum.TIME_MANAGEMENT, SoftSkillEnum.RESILIENCE,\r\n      SoftSkillEnum.PROBLEM_SOLVING, SoftSkillEnum.LEADERSHIP, SoftSkillEnum.ATTENTION_TO_DETAIL\r\n    ];\r\n  }\r\n\r\n  private get hardSkills(): HardSkill[] {\r\n    return [\r\n      // Languages\r\n      new HardSkill(HardSkillEnum.OOP, SkillLevelEnum.MAX),\r\n      new HardSkill(HardSkillEnum.GOLANG, SkillLevelEnum.FOUR_AND_HALF),\r\n      new HardSkill(HardSkillEnum.JAVA, SkillLevelEnum.MAX),\r\n      new HardSkill(HardSkillEnum.SPRING_BOOT, SkillLevelEnum.FOUR),\r\n      new HardSkill(HardSkillEnum.HIBERNATE, SkillLevelEnum.THREE_AND_HALF),\r\n      new HardSkill(HardSkillEnum.C_SHARP, SkillLevelEnum.FOUR),\r\n      new HardSkill(HardSkillEnum.ENTITY_FRAMEWORK, SkillLevelEnum.FOUR),\r\n\r\n      // Databases\r\n      new HardSkill(HardSkillEnum.POSTGRESQL, SkillLevelEnum.FOUR_AND_HALF),\r\n      new HardSkill(HardSkillEnum.SQL_SERVER, SkillLevelEnum.FOUR),\r\n      new HardSkill(HardSkillEnum.MY_SQL, SkillLevelEnum.THREE_AND_HALF),\r\n      new HardSkill(HardSkillEnum.CASSANDRA, SkillLevelEnum.FOUR_AND_HALF),\r\n      new HardSkill(HardSkillEnum.MONGO_DB, SkillLevelEnum.THREE_AND_HALF),\r\n      new HardSkill(HardSkillEnum.DATA_WAREHOUSE, SkillLevelEnum.THREE_AND_HALF),\r\n      new HardSkill(HardSkillEnum.OLAP, SkillLevelEnum.THREE_AND_HALF),\r\n      \r\n      // Management tools\r\n      new HardSkill(HardSkillEnum.SCRUM_KANBAN, SkillLevelEnum.MAX),\r\n      new HardSkill(HardSkillEnum.JIRA_CONFLUENCE, SkillLevelEnum.FOUR),\r\n\r\n      // Patterns\r\n      new HardSkill(HardSkillEnum.DDD, SkillLevelEnum.THREE_AND_HALF),\r\n      new HardSkill(HardSkillEnum.TDD, SkillLevelEnum.MAX),\r\n      new HardSkill(HardSkillEnum.DESIGN_PATTERNS, SkillLevelEnum.THREE_AND_HALF),\r\n     \r\n     \r\n      // Version control\r\n      new HardSkill(HardSkillEnum.GIT, SkillLevelEnum.FOUR),\r\n      new HardSkill(HardSkillEnum.TFS, SkillLevelEnum.THREE),\r\n      new HardSkill(HardSkillEnum.PHABRICATOR_ARCANIST, SkillLevelEnum.THREE_AND_HALF),\r\n\r\n      // Frontend\r\n      new HardSkill(HardSkillEnum.ANGULAR, SkillLevelEnum.FOUR),\r\n      new HardSkill(HardSkillEnum.JAVASCRIPT_TYPESCRIPT, SkillLevelEnum.THREE_AND_HALF),\r\n      new HardSkill(HardSkillEnum.FRONT_TECHNOLOGIES, SkillLevelEnum.THREE),\r\n      new HardSkill(HardSkillEnum.KENDO_UI, SkillLevelEnum.THREE),\r\n\r\n      // Formats\r\n      new HardSkill(HardSkillEnum.JSON, SkillLevelEnum.MAX),\r\n      new HardSkill(HardSkillEnum.JWT, SkillLevelEnum.MAX),\r\n      new HardSkill(HardSkillEnum.XML, SkillLevelEnum.THREE),\r\n\r\n      // General\r\n      new HardSkill(HardSkillEnum.OAUTH20, SkillLevelEnum.FOUR),\r\n      new HardSkill(HardSkillEnum.JUNIT, SkillLevelEnum.THREE),\r\n      \r\n      // API\r\n      new HardSkill(HardSkillEnum.API_DESIGN, SkillLevelEnum.FOUR),\r\n      new HardSkill(HardSkillEnum.REST, SkillLevelEnum.FOUR_AND_HALF),\r\n      new HardSkill(HardSkillEnum.SWAGGER, SkillLevelEnum.FOUR),\r\n      new HardSkill(HardSkillEnum.POSTMAN, SkillLevelEnum.FOUR),\r\n      new HardSkill(HardSkillEnum.SOAPUI, SkillLevelEnum.TWO_AND_HALF),\r\n      \r\n      // CI/CD and build tools\r\n      new HardSkill(HardSkillEnum.MAVEN, SkillLevelEnum.FOUR),\r\n      new HardSkill(HardSkillEnum.JENKINS, SkillLevelEnum.THREE),\r\n      new HardSkill(HardSkillEnum.SONAR_QUBE, SkillLevelEnum.FOUR_AND_HALF),\r\n      new HardSkill(HardSkillEnum.AWS, SkillLevelEnum.THREE_AND_HALF),\r\n      new HardSkill(HardSkillEnum.CI_CD, SkillLevelEnum.THREE_AND_HALF),\r\n      \r\n      // Observability\r\n      new HardSkill(HardSkillEnum.KIBANA, SkillLevelEnum.FOUR),\r\n      new HardSkill(HardSkillEnum.GRAFANA, SkillLevelEnum.FOUR),\r\n      new HardSkill(HardSkillEnum.M3, SkillLevelEnum.THREE_AND_HALF),\r\n      \r\n    ];\r\n  }\r\n\r\n  private get skills(): Skills {\r\n    return new Skills(this.hardSkills, this.softSkills);\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { LinkedinInfoEnum } from 'src/app/models/enums/linkedin-info.enum';\r\nimport { SystemLanguageEnum } from 'src/app/models/enums/system-language.enum';\r\nimport { TranslationTypeEnum } from 'src/app/models/enums/translation-type.enum';\r\nimport { TranslationService } from 'src/app/service/translation.service';\r\n\r\n@Component({\r\n  selector: 'ms-btn-linkedin',\r\n  templateUrl: './ms-btn-linkedin.component.html',\r\n  styleUrls: ['./ms-btn-linkedin.component.css']\r\n})\r\nexport class MsBtnLinkedinComponent implements OnInit {\r\n\r\n  @Input() position: string = 'right'; // Default\r\n  @Input() language: SystemLanguageEnum = SystemLanguageEnum.EN_US;\r\n\r\n  constructor(private translationService: TranslationService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  get tooltip(): string {\r\n    return this.translationService.translate(this.language, TranslationTypeEnum.LINKEDIN_INFO, LinkedinInfoEnum.TOOLTIP);\r\n  }\r\n\r\n  get uri(): string {\r\n    return this.translationService.translate(this.language, TranslationTypeEnum.LINKEDIN_INFO, LinkedinInfoEnum.LINK);\r\n  }\r\n}\r\n","<a class=\"btn btn-icon btn-round btn-linkedin\" [placement]=\"position\" [ngbTooltip]=\"tooltip\"\r\n    [href]=\"uri\" rel=\"external\" target=\"_blank\">\r\n    <i class=\"fa fa-linkedin-square\"></i>\r\n</a>","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","export enum FixedLabelsAndTooltipsEnum {\r\n\r\n    BACK_TO_TOP_BTN_TOOLTIP,\r\n    CURRENT_LABEL\r\n}\r\n"]}